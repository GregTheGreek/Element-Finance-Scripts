/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BalanceAllocationMock,
  BalanceAllocationMockInterface,
} from "../BalanceAllocationMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "cash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "cashToManaged",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sharedCash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sharedManaged",
        type: "bytes32",
      },
    ],
    name: "fromSharedToBalanceA",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sharedCash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sharedManaged",
        type: "bytes32",
      },
    ],
    name: "fromSharedToBalanceB",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "isNotZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "isZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "lastChangeBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "managed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "managedToCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newManaged",
        type: "uint256",
      },
    ],
    name: "setManaged",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_managed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lastChangeBlock",
        type: "uint256",
      },
    ],
    name: "toBalance",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenABalance",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "tokenBBalance",
        type: "bytes32",
      },
    ],
    name: "toSharedCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenABalance",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "tokenBBalance",
        type: "bytes32",
      },
    ],
    name: "toSharedManaged",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "total",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "balances",
        type: "bytes32[]",
      },
    ],
    name: "totals",
    outputs: [
      {
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610900806100206000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c8063736ea832116100b2578063ce83307711610081578063dd64691711610066578063dd646917146103e8578063e1ac202214610405578063fba56f521461042e5761011b565b8063ce833077146102d2578063d6c752c5146102f55761011b565b8063736ea8321461024c57806393b9de4c1461026f578063a44bed6214610292578063ac0177a9146102af5761011b565b806351b311f0116100ee57806351b311f0146101c0578063595e098a146101e35780637171e37f146102065780637323e7ca146102295761011b565b8063256da630146101205780633a1f6e15146101555780633f7e18a5146101865780634ca27dff146101a3575b600080fd5b6101436004803603604081101561013657600080fd5b508035906020013561044b565b60408051918252519081900360200190f35b6101726004803603602081101561016b57600080fd5b503561045e565b604080519115158252519081900360200190f35b6101436004803603602081101561019c57600080fd5b503561046f565b610143600480360360208110156101b957600080fd5b503561047a565b610143600480360360408110156101d657600080fd5b5080359060200135610485565b610143600480360360408110156101f957600080fd5b5080359060200135610491565b6101436004803603604081101561021c57600080fd5b508035906020013561049d565b6101436004803603604081101561023f57600080fd5b50803590602001356104a9565b6101436004803603604081101561026257600080fd5b50803590602001356104b5565b6101436004803603604081101561028557600080fd5b50803590602001356104c1565b610143600480360360208110156102a857600080fd5b50356104cd565b610143600480360360408110156102c557600080fd5b50803590602001356104d8565b610143600480360360408110156102e857600080fd5b50803590602001356104e4565b6103986004803603602081101561030b57600080fd5b81019060208101813564010000000081111561032657600080fd5b82018360208201111561033857600080fd5b8035906020019184602083028401116401000000008311171561035a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506104f0945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103d45781810151838201526020016103bc565b505050509050019250505060405180910390f35b610172600480360360208110156103fe57600080fd5b5035610502565b6101436004803603606081101561041b57600080fd5b508035906020810135906040013561050d565b6101436004803603602081101561044457600080fd5b5035610522565b6000610457838361052d565b9392505050565b60006104698261057e565b92915050565b600061046982610590565b600061046982610596565b600061045783836105ac565b600061045783836105d1565b60006104578383610611565b60006104578383610632565b60006104578383610650565b60006104578383610673565b60006104698261069e565b600061045783836106b1565b600061045783836106c8565b60606104fb826106d8565b5092915050565b600061046982610788565b600061051a8484846107aa565b949350505050565b6000610469826107e3565b6000806105438361053d8661069e565b906107fe565b9050600061055a8461055487610596565b90610814565b9050600061056786610590565b90506105748383836107aa565b9695505050505050565b600061058982610788565b1592915050565b60e01c90565b60701c6dffffffffffffffffffffffffffff1690565b60006104576105ba84610596565b6105c384610596565b6105cc86610590565b6107aa565b6000806105ee6105e085610590565b6105e985610590565b610826565b905061051a6105fc8561069e565b6106058561069e565b8363ffffffff1661083d565b600080610621836105548661069e565b9050600061055a8461053d87610596565b600061045761064084610596565b61064984610596565b600061083d565b60008061065c8461069e565b90504361066a8285836107aa565b95945050505050565b600080610683836105548661069e565b9050600061069085610596565b9050436105748383836107aa565b6dffffffffffffffffffffffffffff1690565b60006104576106bf8461069e565b6105c38461069e565b6000806106838361053d8661069e565b60606000825167ffffffffffffffff811180156106f457600080fd5b5060405190808252806020026020018201604052801561071e578160200160208202803683370190505b5091506000905060005b825181101561078257600084828151811061073f57fe5b60200260200101519050610752816107e3565b84838151811061075e57fe5b602002602001018181525050610777836105e983610590565b925050600101610728565b50915091565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff161590565b60008383016107d88582108015906107d057506e01000000000000000000000000000082105b61020e61084b565b61066a85858561083d565b60006107ee82610596565b6107f78361069e565b0192915050565b600061080e83831115600161084b565b50900390565b6000828201610457848210158361084b565b6000818310156108365781610457565b5090919050565b60e01b60709190911b010190565b81610859576108598161085d565b5050565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fdfea26469706673582212209f6ebb951f1fb20cc6710e08235183ac73f34d2bc9382f14df94350f6e232cfe64736f6c63430007010033";

type BalanceAllocationMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalanceAllocationMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalanceAllocationMock__factory extends ContractFactory {
  constructor(...args: BalanceAllocationMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BalanceAllocationMock> {
    return super.deploy(overrides || {}) as Promise<BalanceAllocationMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BalanceAllocationMock {
    return super.attach(address) as BalanceAllocationMock;
  }
  connect(signer: Signer): BalanceAllocationMock__factory {
    return super.connect(signer) as BalanceAllocationMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalanceAllocationMockInterface {
    return new utils.Interface(_abi) as BalanceAllocationMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalanceAllocationMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BalanceAllocationMock;
  }
}
