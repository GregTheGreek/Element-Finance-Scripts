/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockPool, MockPoolInterface } from "../MockPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "enum IVault.PoolSpecialization",
        name: "specialization",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "currentBalances",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "OnExitPoolCalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "currentBalances",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "OnJoinPoolCalled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "deregisterTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "currentBalances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "currentBalances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "assetManagers",
        type: "address[]",
      },
    ],
    name: "registerTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMultiplier",
        type: "uint256",
      },
    ],
    name: "setMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052670de0b6b3a764000060005534801561001c57600080fd5b50604051610f25380380610f2583398101604081905261003b916100ea565b6040516309b2760f60e01b81526001600160a01b038316906309b2760f90610067908490600401610131565b602060405180830381600087803b15801561008157600080fd5b505af1158015610095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b991906100d2565b60a0525060601b6001600160601b031916608052610145565b6000602082840312156100e3578081fd5b5051919050565b600080604083850312156100fc578081fd5b82516001600160a01b0381168114610112578182fd5b602084015190925060038110610126578182fd5b809150509250929050565b602081016003831061013f57fe5b91905290565b60805160601c60a051610da661017f6000398061021f5280610283528061030f5250806101f252806102e252806103df5250610da66000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063641579a6116100765780638d928af81161005b5780638d928af8146101355780639d2c110c1461014a578063d5c096c41461015d576100a3565b8063641579a61461010157806374f3b00914610114576100a3565b806301ec954a146100a8578063267dc1f0146100d157806338fff2d0146100e65780635f2b65f8146100ee575b600080fd5b6100bb6100b6366004610a1d565b610170565b6040516100c89190610b96565b60405180910390f35b6100e46100df366004610857565b6101b5565b005b6100bb610281565b6100e46100fc366004610824565b6102a5565b6100e461010f366004610ada565b61036e565b61012761012236600461097a565b610373565b6040516100c8929190610b71565b61013d6103dd565b6040516100c89190610ce3565b6100bb610158366004610a8e565b610401565b61012761016b36600461097a565b610445565b6000808551600181111561018057fe5b1461019b57600054606086015161019691610483565b6101ac565b60005460608601516101ac916104d6565b95945050505050565b6040517f66a9c7d200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906366a9c7d29061024b907f00000000000000000000000000000000000000000000000000000000000000009086908690600401610c73565b600060405180830381600087803b15801561026557600080fd5b505af1158015610279573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6040517f7d3aeb9600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690637d3aeb9690610339907f0000000000000000000000000000000000000000000000000000000000000000908590600401610c5a565b600060405180830381600087803b15801561035357600080fd5b505af1158015610367573d6000803e3d6000fd5b5050505050565b600055565b6060807fd757d12f44d8d0b749520380aa9c4b9f37a744d90e601bd174de67345108f6c9898989898989896040516103b19796959493929190610b9f565b60405180910390a1828060200190518101906103cd9190610919565b909a909950975050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000808451600181111561041157fe5b1461042c57600054606085015161042791610483565b61043d565b600054606085015161043d916104d6565b949350505050565b6060807f7db7a909c113f809a4d01bf05f9f750c273333b7db84675206d198d497714694898989898989896040516103b19796959493929190610b9f565b6000610492821515600461050c565b8261049f575060006104d0565b670de0b6b3a7640000838102906104c2908583816104b957fe5b0414600561050c565b8281816104cb57fe5b049150505b92915050565b60008282026104fa8415806104f35750838583816104f057fe5b04145b600361050c565b670de0b6b3a764000090049392505050565b8161051a5761051a8161051e565b5050565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b80356104d081610d4b565b600082601f8301126105a6578081fd5b81356105b96105b482610d2b565b610d04565b8181529150602080830190848101818402860182018710156105da57600080fd5b60005b848110156106025781356105f081610d4b565b845292820192908201906001016105dd565b505050505092915050565b600082601f83011261061d578081fd5b813561062b6105b482610d2b565b81815291506020808301908481018184028601820187101561064c57600080fd5b60005b848110156106025781358452928201929082019060010161064f565b600082601f83011261067b578081fd5b81516106896105b482610d2b565b8181529150602080830190848101818402860182018710156106aa57600080fd5b60005b84811015610602578151845292820192908201906001016106ad565b600082601f8301126106d9578081fd5b813567ffffffffffffffff8111156106ef578182fd5b61072060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610d04565b915080825283602082850101111561073757600080fd5b8060208401602084013760009082016020015292915050565b8035600281106104d057600080fd5b6000610120808385031215610772578182fd5b61077b81610d04565b9150506107888383610750565b8152610797836020840161058b565b60208201526107a9836040840161058b565b6040820152606082013560608201526080820135608082015260a082013560a08201526107d98360c0840161058b565b60c08201526107eb8360e0840161058b565b60e08201526101008083013567ffffffffffffffff81111561080c57600080fd5b610818858286016106c9565b82840152505092915050565b600060208284031215610835578081fd5b813567ffffffffffffffff81111561084b578182fd5b61043d84828501610596565b60008060408385031215610869578081fd5b823567ffffffffffffffff80821115610880578283fd5b61088c86838701610596565b93506020915081850135818111156108a2578384fd5b85019050601f810186136108b4578283fd5b80356108c26105b482610d2b565b81815283810190838501858402850186018a10156108de578687fd5b8694505b838510156109095780356108f581610d4b565b8352600194909401939185019185016108e2565b5080955050505050509250929050565b6000806040838503121561092b578182fd5b825167ffffffffffffffff80821115610942578384fd5b61094e8683870161066b565b93506020850151915080821115610963578283fd5b506109708582860161066b565b9150509250929050565b600080600080600080600060e0888a031215610994578283fd5b8735965060208801356109a681610d4b565b955060408801356109b681610d4b565b9450606088013567ffffffffffffffff808211156109d2578485fd5b6109de8b838c0161060d565b955060808a0135945060a08a0135935060c08a0135915080821115610a01578283fd5b50610a0e8a828b016106c9565b91505092959891949750929550565b60008060008060808587031215610a32578384fd5b843567ffffffffffffffff80821115610a49578586fd5b610a558883890161075f565b95506020870135915080821115610a6a578485fd5b50610a778782880161060d565b949794965050505060408301359260600135919050565b600080600060608486031215610aa2578283fd5b833567ffffffffffffffff811115610ab8578384fd5b610ac48682870161075f565b9660208601359650604090950135949350505050565b600060208284031215610aeb578081fd5b5035919050565b6000815180845260208085019450808401835b83811015610b3757815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101610b05565b509495945050505050565b6000815180845260208085019450808401835b83811015610b3757815187529582019590820190600101610b55565b600060408252610b846040830185610b42565b82810360208401526101ac8185610b42565b90815260200190565b6000888252602073ffffffffffffffffffffffffffffffffffffffff808a168285015280891660408501525060e06060840152610bdf60e0840188610b42565b8660808501528560a085015283810360c08501528451808252835b81811015610c15578681018401518382018501528301610bfa565b81811115610c2557848483850101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019998505050505050505050565b60008382526040602083015261043d6040830184610af2565b60008482526020606081840152610c8d6060840186610af2565b8381036040850152845180825282860191830190845b81811015610cd557835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610ca3565b509098975050505050505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60405181810167ffffffffffffffff81118282101715610d2357600080fd5b604052919050565b600067ffffffffffffffff821115610d41578081fd5b5060209081020190565b73ffffffffffffffffffffffffffffffffffffffff81168114610d6d57600080fd5b5056fea26469706673582212202957163c80744270744726de59173aeaf1594d153ddc32b0ece6e536a183e29864736f6c63430007010033";

type MockPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPool__factory extends ContractFactory {
  constructor(...args: MockPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    vault: string,
    specialization: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPool> {
    return super.deploy(
      vault,
      specialization,
      overrides || {}
    ) as Promise<MockPool>;
  }
  getDeployTransaction(
    vault: string,
    specialization: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(vault, specialization, overrides || {});
  }
  attach(address: string): MockPool {
    return super.attach(address) as MockPool;
  }
  connect(signer: Signer): MockPool__factory {
    return super.connect(signer) as MockPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPoolInterface {
    return new utils.Interface(_abi) as MockPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPool {
    return new Contract(address, _abi, signerOrProvider) as MockPool;
  }
}
