/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockERC20YearnVault,
  MockERC20YearnVaultInterface,
} from "../MockERC20YearnVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DEGRADATION_COEFFICIENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "apiVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastReport",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedProfitDegradation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "precisionFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deposit",
        type: "uint256",
      },
    ],
    name: "report",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "setDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC20Permit",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxShares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxLoss",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021a7380380620021a7833981016040819052620000349162000372565b604080518082018252601081526f135bd8dac81659585c9b8815985d5b1d60821b60208083019182528351808501909452600384526226acab60e91b90840152600080546001600160a01b0319163317905581519192916200009991600291620002cc565b508051620000af906003906020840190620002cc565b506004805460ff1916601217905560056020526000197f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc8190553060009081526040902055620000fe620002a3565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6002604051620001309190620003c5565b60408051918290038220828201825260018352603160f81b60209384015290516200018393927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69146913091016200046a565b60408051601f19818403018152919052805160209091012060085550620001ac905033620002a5565b600b80546001600160a01b0319166001600160a01b0383811691909117918290556040805163313ce56760e01b81529051929091169163313ce56791600480820192602092909190829003018186803b1580156200020957600080fd5b505afa1580156200021e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002449190620003a2565b6004805460ff191660ff928316179081905562000264911660126200061d565b6200027190600a62000510565b600a55620f42406200028d670de0b6b3a7640000602e620005fb565b620002999190620004a2565b600c555062000696565b565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b828054620002da9062000643565b90600052602060002090601f016020900481019282620002fe576000855562000349565b82601f106200031957805160ff191683800117855562000349565b8280016001018555821562000349579182015b82811115620003495782518255916020019190600101906200032c565b50620003579291506200035b565b5090565b5b808211156200035757600081556001016200035c565b60006020828403121562000384578081fd5b81516001600160a01b03811681146200039b578182fd5b9392505050565b600060208284031215620003b4578081fd5b815160ff811681146200039b578182fd5b8154600090819060028104600180831680620003e257607f831692505b60208084108214156200040357634e487b7160e01b87526022600452602487fd5b8180156200041a57600181146200042c576200045c565b60ff198616895284890196506200045c565b620004378a62000496565b885b86811015620004545781548b82015290850190830162000439565b505084890196505b509498975050505050505050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60009081526020902090565b600082620004be57634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611620004d7575062000507565b818704821115620004ec57620004ec62000680565b80861615620004fa57918102915b9490941c938002620004c6565b94509492505050565b60006200039b60001960ff8516846000826200052f575060016200039b565b816200053e575060006200039b565b8160018114620005575760028114620005625762000596565b60019150506200039b565b60ff84111562000576576200057662000680565b6001841b9150848211156200058f576200058f62000680565b506200039b565b5060208310610133831016604e8410600b8410161715620005ce575081810a83811115620005c857620005c862000680565b6200039b565b620005dd8484846001620004c3565b808604821115620005f257620005f262000680565b02949350505050565b600081600019048311821515161562000618576200061862000680565b500290565b600060ff821660ff8416808210156200063a576200063a62000680565b90039392505050565b6002810460018216806200065857607f821691505b602082108114156200067a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b611b0180620006a66000396000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c80637ecebe001161012a578063b9181611116100bd578063d505accf1161008c578063e63697c811610071578063e63697c814610409578063fc0c546a1461041c578063fe9fbb801461042457610226565b8063d505accf146103e3578063dd62ed3e146103f657610226565b8063b9181611146103ad578063bdc8144b146103c0578063c3535b52146103d3578063d250f088146103db57610226565b806399530b06116100f957806399530b06146103775780639d902fc01461037f578063a9059cbb14610387578063b6a5d7de1461039a57610226565b80637ecebe00146103415780638da5cb5b1461035457806395d89b411461035c578063969b1cdb1461036457610226565b806330adf81f116101bd578063422327161161018c5780635aa6e675116101715780635aa6e675146103065780636e553f651461031b57806370a082311461032e57610226565b806342232716146102f657806344b81396146102fe57610226565b806330adf81f146102c9578063313ce567146102d15780633644e515146102e65780633a98ef39146102ee57610226565b806318160ddd116101f957806318160ddd1461029357806323b872dd1461029b57806325829410146102ae57806327c97fa5146102b657610226565b806301e1d1141461022b57806306fdde0314610249578063095ea7b31461025e57806313af40351461027e575b600080fd5b610233610437565b60405161024091906114ee565b60405180910390f35b6102516104e3565b6040516102409190611556565b61027161026c366004611376565b610571565b60405161024091906114e3565b61029161028c36600461127e565b6105e8565b005b61023361066f565b6102716102a93660046112ca565b610675565b61025161082b565b6102916102c436600461127e565b610862565b6102336108e5565b6102d9610909565b6040516102409190611881565b610233610912565b610233610918565b61023361091e565b610233610924565b61030e61092a565b604051610240919061146b565b6102336103293660046113ef565b61092f565b61023361033c36600461127e565b610a11565b61023361034f36600461127e565b610a23565b61030e610a35565b610251610a51565b6102916103723660046113bf565b610a5e565b610233610b3c565b610233610b59565b610271610395366004611376565b610b5f565b6102916103a836600461127e565b610b6c565b6102716103bb36600461127e565b610baf565b6102916103ce3660046113bf565b610bc4565b610233610c16565b610233610c1c565b6102916103f1366004611305565b610c28565b610233610404366004611298565b610ed2565b610233610417366004611411565b610eef565b61030e61103a565b61027161043236600461127e565b611056565b600b546040517f70a0823100000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff16906370a082319061048e90309060040161146b565b60206040518083038186803b1580156104a657600080fd5b505afa1580156104ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104de91906113d7565b905090565b600280546104f090611a2d565b80601f016020809104026020016040519081016040528092919081815260200182805461051c90611a2d565b80156105695780601f1061053e57610100808354040283529160200191610569565b820191906000526020600020905b81548152906001019060200180831161054c57829003601f168201915b505050505081565b33600081815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105d79086906114ee565b60405180910390a350600192915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106285760405162461bcd60e51b815260040161061f9061166c565b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60095490565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260056020526040812054828110156106bb5760405162461bcd60e51b815260040161061f9061184a565b73ffffffffffffffffffffffffffffffffffffffff851633146107705773ffffffffffffffffffffffffffffffffffffffff85166000908152600660209081526040808320338452909152902054600019811461076e57838110156107325760405162461bcd60e51b815260040161061f906115fe565b61073c8482611a16565b73ffffffffffffffffffffffffffffffffffffffff871660009081526006602090815260408083203384529091529020555b505b61077a8382611a16565b73ffffffffffffffffffffffffffffffffffffffff80871660009081526005602052604080822093909355908616815220546107b790849061188f565b73ffffffffffffffffffffffffffffffffffffffff80861660008181526005602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108169087906114ee565b60405180910390a360019150505b9392505050565b60408051808201909152600581527f302e332e32000000000000000000000000000000000000000000000000000000602082015290565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108995760405162461bcd60e51b815260040161061f9061166c565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60045460ff1681565b60085481565b60095481565b600c5481565b600e5481565b600090565b60008083116109505760405162461bcd60e51b815260040161061f906115c7565b600061095c8385611085565b600b546040517f23b872dd00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906109b79033903090899060040161148c565b602060405180830381600087803b1580156109d157600080fd5b505af11580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a09919061139f565b509392505050565b60056020526000908152604090205481565b60076020526000908152604090205481565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600380546104f090611a2d565b610a6733611056565b610a835760405162461bcd60e51b815260040161061f90611700565b42600d55600e819055600b546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90610ae69033903090869060040161148c565b602060405180830381600087803b158015610b0057600080fd5b505af1158015610b14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b38919061139f565b5050565b6004546000906104de90610b549060ff16600a611926565b611130565b600a5481565b6000610824338484610675565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ba35760405162461bcd60e51b815260040161061f9061166c565b610bac81611208565b50565b60016020526000908152604090205460ff1681565b610bcc61092a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bac5760405162461bcd60e51b815260040161061f90611635565b600d5481565b670de0b6b3a764000081565b60085473ffffffffffffffffffffffffffffffffffffffff88166000908152600760209081526040808320549051929392610c8e927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928d928d928d92918d91016114f7565b60405160208183030381529060405280519060200120604051602001610cb5929190611435565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120905073ffffffffffffffffffffffffffffffffffffffff8816610d205760405162461bcd60e51b815260040161061f90611737565b60018185858560405160008152602001604052604051610d439493929190611538565b6020604051602081039080840390855afa158015610d65573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610db95760405162461bcd60e51b815260040161061f906117dc565b841580610dc65750844211155b610de25760405162461bcd60e51b815260040161061f90611813565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610e225760405162461bcd60e51b815260040161061f906116a3565b73ffffffffffffffffffffffffffffffffffffffff88166000908152600760205260408120805491610e5383611a81565b909155505073ffffffffffffffffffffffffffffffffffffffff8089166000818152600660209081526040808320948c168084529490915290819020899055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610ec0908a906114ee565b60405180910390a35050505050505050565b600660209081526000928352604080842090915290825290205481565b6000808411610f105760405162461bcd60e51b815260040161061f9061176e565b33600090815260056020526040902054841115610f3f5760405162461bcd60e51b815260040161061f906117a5565b6000610f4a85611130565b90508460096000828254610f5e9190611a16565b90915550503360009081526005602052604081208054879290610f82908490611a16565b9091555050600b546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb90610fdf90879085906004016114bd565b602060405180830381600087803b158015610ff957600080fd5b505af115801561100d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611031919061139f565b50949350505050565b600b5473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205460ff165b919050565b600080600060095411156110d457600a5461109e610437565b60095485600a546110af91906119f7565b6110b991906119f7565b6110c391906118a7565b6110cd91906118a7565b90506110d7565b50815b80600960008282546110e9919061188f565b909155505073ffffffffffffffffffffffffffffffffffffffff84166000908152600560205260408120805483929061112390849061188f565b9091555090949350505050565b600060095460001415611144575080611080565b6000600c54600d54426111579190611a16565b61116191906119f7565b9050600061116d610437565b9050670de0b6b3a76400008210156111d157600a54600e54670de0b6b3a76400009061119985846119f7565b6111a391906119f7565b6111ad91906118a7565b6111b791906118a7565b600e546111c49190611a16565b6111ce9082611a16565b90505b600a54600954826111e287846119f7565b6111ec91906119f7565b6111f691906118a7565b61120091906118a7565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b803573ffffffffffffffffffffffffffffffffffffffff8116811461108057600080fd5b60006020828403121561128f578081fd5b6108248261125a565b600080604083850312156112aa578081fd5b6112b38361125a565b91506112c16020840161125a565b90509250929050565b6000806000606084860312156112de578081fd5b6112e78461125a565b92506112f56020850161125a565b9150604084013590509250925092565b600080600080600080600060e0888a03121561131f578283fd5b6113288861125a565b96506113366020890161125a565b95506040880135945060608801359350608088013560ff81168114611359578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611388578182fd5b6113918361125a565b946020939093013593505050565b6000602082840312156113b0578081fd5b81518015158114610824578182fd5b6000602082840312156113d0578081fd5b5035919050565b6000602082840312156113e8578081fd5b5051919050565b60008060408385031215611401578182fd5b823591506112c16020840161125a565b600080600060608486031215611425578283fd5b833592506112f56020850161125a565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b90815260200190565b95865273ffffffffffffffffffffffffffffffffffffffff94851660208701529290931660408501526060840152608083019190915260a082015260c00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b8181101561158257858101830151858201604001528201611566565b818111156115935783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526012908201527f6465706f736974696e6720302076616c75650000000000000000000000000000604082015260600190565b6020808252601d908201527f45524332303a20696e73756666696369656e742d616c6c6f77616e6365000000604082015260600190565b6020808252600b908201527f21676f7665726e616e6365000000000000000000000000000000000000000000604082015260600190565b60208082526010908201527f53656e646572206e6f74206f776e657200000000000000000000000000000000604082015260600190565b60208082526022908201527f45524332303a20696e76616c6964207369676e6174757265202773272076616c60408201527f7565000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526015908201527f53656e646572206e6f7420417574686f72697a65640000000000000000000000604082015260600190565b60208082526018908201527f45524332303a20696e76616c69642d616464726573732d300000000000000000604082015260600190565b60208082526013908201527f43616e2774207769746864726177207a65726f00000000000000000000000000604082015260600190565b60208082526015908201527f536861726573206578636565642062616c616e63650000000000000000000000604082015260600190565b60208082526015908201527f45524332303a20696e76616c69642d7065726d69740000000000000000000000604082015260600190565b60208082526015908201527f45524332303a207065726d69742d657870697265640000000000000000000000604082015260600190565b6020808252601b908201527f45524332303a20696e73756666696369656e742d62616c616e63650000000000604082015260600190565b60ff91909116815260200190565b600082198211156118a2576118a2611a9c565b500190565b6000826118db577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b80825b60018086116118f2575061191d565b81870482111561190457611904611a9c565b8086161561191157918102915b9490941c9380026118e3565b94509492505050565b600061082460001960ff85168460008261194257506001610824565b8161194f57506000610824565b8160018114611965576002811461196f5761199c565b6001915050610824565b60ff84111561198057611980611a9c565b6001841b91508482111561199657611996611a9c565b50610824565b5060208310610133831016604e8410600b84101617156119cf575081810a838111156119ca576119ca611a9c565b610824565b6119dc84848460016118e0565b8086048211156119ee576119ee611a9c565b02949350505050565b6000816000190483118215151615611a1157611a11611a9c565b500290565b600082821015611a2857611a28611a9c565b500390565b600281046001821680611a4157607f821691505b60208210811415611a7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000600019821415611a9557611a95611a9c565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212206aace3b0efe63a374ea81d93e5ceb1641f99e426912eaa0e239371c1770a021d64736f6c63430008000033";

type MockERC20YearnVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC20YearnVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC20YearnVault__factory extends ContractFactory {
  constructor(...args: MockERC20YearnVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC20YearnVault> {
    return super.deploy(
      _token,
      overrides || {}
    ) as Promise<MockERC20YearnVault>;
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  attach(address: string): MockERC20YearnVault {
    return super.attach(address) as MockERC20YearnVault;
  }
  connect(signer: Signer): MockERC20YearnVault__factory {
    return super.connect(signer) as MockERC20YearnVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC20YearnVaultInterface {
    return new utils.Interface(_abi) as MockERC20YearnVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC20YearnVault {
    return new Contract(address, _abi, signerOrProvider) as MockERC20YearnVault;
  }
}
