/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockInternalBalanceRelayer,
  MockInternalBalanceRelayerInterface,
} from "../MockInternalBalanceRelayer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "sender",
        type: "address",
      },
      {
        internalType: "contract IAsset",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "depositAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "withdrawAmounts",
        type: "uint256[]",
      },
    ],
    name: "depositAndWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161065038038061065083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6105bf806100916000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637b58efc11461003b578063fbfa77cf14610050575b600080fd5b61004e61004936600461040c565b61006e565b005b6100586101e4565b6040516100659190610543565b60405180910390f35b61007a82518251610200565b60005b82518110156101dd5760606100a86000878787868151811061009b57fe5b6020026020010151610211565b6000546040517f0e8e3e8400000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff1690630e8e3e84906100ff9084906004016104ac565b600060405180830381600087803b15801561011957600080fd5b505af115801561012d573d6000803e3d6000fd5b5050505060606101466001888887878151811061009b57fe5b6000546040517f0e8e3e8400000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff1690630e8e3e849061019d9084906004016104ac565b600060405180830381600087803b1580156101b757600080fd5b505af11580156101cb573d6000803e3d6000fd5b50506001909401935061007d92505050565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b61020d81831460676102d9565b5050565b604080516001808252818301909252606091816020015b610230610349565b8152602001906001900390816102285790505090506040518060a0016040528086600381111561025c57fe5b81526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815250816000815181106102c657fe5b6020026020010181905250949350505050565b8161020d577f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808304818104828106603090810160101b848706949093060160081b92909201016642414c230000300160c81b60445261020d91606490fd5b6040805160a081019091528060008152600060208201819052604082018190526060820181905260809091015290565b600082601f830112610389578081fd5b813567ffffffffffffffff808211156103a0578283fd5b6020808302604051828282010181811085821117156103bd578687fd5b6040528481529450818501925085820181870183018810156103de57600080fd5b600091505b848210156104015780358452928201926001919091019082016103e3565b505050505092915050565b60008060008060808587031215610421578384fd5b843561042c81610564565b9350602085013561043c81610564565b9250604085013567ffffffffffffffff80821115610458578384fd5b61046488838901610379565b93506060870135915080821115610479578283fd5b5061048687828801610379565b91505092959194509250565b73ffffffffffffffffffffffffffffffffffffffff169052565b602080825282518282018190526000919060409081850190868401855b828110156105365781518051600481106104df57fe5b8552808701516104f188870182610492565b50858101518686015260608082015161050c82880182610492565b50506080908101519061052186820183610492565b505060a09390930192908501906001016104c9565b5091979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461058657600080fd5b5056fea2646970667358221220ced99458e0c9cf5341f1699caec5168d7d9066cea266998248b3ba67e2cf698d64736f6c63430007010033";

type MockInternalBalanceRelayerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockInternalBalanceRelayerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockInternalBalanceRelayer__factory extends ContractFactory {
  constructor(...args: MockInternalBalanceRelayerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockInternalBalanceRelayer> {
    return super.deploy(
      _vault,
      overrides || {}
    ) as Promise<MockInternalBalanceRelayer>;
  }
  getDeployTransaction(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  attach(address: string): MockInternalBalanceRelayer {
    return super.attach(address) as MockInternalBalanceRelayer;
  }
  connect(signer: Signer): MockInternalBalanceRelayer__factory {
    return super.connect(signer) as MockInternalBalanceRelayer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockInternalBalanceRelayerInterface {
    return new utils.Interface(_abi) as MockInternalBalanceRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockInternalBalanceRelayer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockInternalBalanceRelayer;
  }
}
