/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockBasePool, MockBasePoolInterface } from "../MockBasePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "enum IVault.PoolSpecialization",
        name: "specialization",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pauseWindowDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPausedState",
    outputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pauseWindowEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6103e06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b5060405162002ec538038062002ec58339810160408190526200005a9162000a37565b6040805180820190915260018152603160f81b6020808301918252336080526001600160601b0319606085901b1660a0528951908a0190812060c0529151902060e0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005287518a918a918a918a918a918a918a918a918a91849184918a918a91620000ed916003919062000845565b5080516200010390600490602084019062000845565b506200011b9150506276a70083111561019462000616565b6200012f62278d0082111561019562000616565b429091016101408190520161016052845162000151906002111560c862000616565b6200016960088651111560c96200061660201b60201c565b6200017f856200062b60201b62000c221760201c565b6200018a8462000637565b6040516309b2760f60e01b81526000906001600160a01b038b16906309b2760f90620001bb908c9060040162000be4565b602060405180830381600087803b158015620001d657600080fd5b505af1158015620001eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000211919062000a1e565b9050896001600160a01b03166366a9c7d2828889516001600160401b03811180156200023c57600080fd5b5060405190808252806020026020018201604052801562000267578160200160208202803683370190505b506040518463ffffffff1660e01b8152600401620002889392919062000b48565b600060405180830381600087803b158015620002a357600080fd5b505af1158015620002b8573d6000803e3d6000fd5b5050506001600160601b031960608c901b1661018052506101a081905285516101c0528551620002ea57600062000301565b85600081518110620002f857fe5b60200260200101515b60601b6001600160601b0319166101e0528551600110620003245760006200033b565b856001815181106200033257fe5b60200260200101515b60601b6001600160601b0319166102005285516002106200035e57600062000375565b856002815181106200036c57fe5b60200260200101515b60601b6001600160601b03191661022052855160031062000398576000620003af565b85600381518110620003a657fe5b60200260200101515b60601b6001600160601b031916610240528551600410620003d2576000620003e9565b85600481518110620003e057fe5b60200260200101515b60601b6001600160601b0319166102605285516005106200040c57600062000423565b856005815181106200041a57fe5b60200260200101515b60601b6001600160601b031916610280528551600610620004465760006200045d565b856006815181106200045457fe5b60200260200101515b60601b6001600160601b0319166102a05285516007106200048057600062000497565b856007815181106200048e57fe5b60200260200101515b60601b6001600160601b0319166102c0528551620004b7576000620004dd565b620004dd86600081518110620004c957fe5b6020026020010151620006a660201b60201c565b6102e0528551600110620004f357600062000505565b6200050586600181518110620004c957fe5b6103005285516002106200051b5760006200052d565b6200052d86600281518110620004c957fe5b6103205285516003106200054357600062000555565b6200055586600381518110620004c957fe5b6103405285516004106200056b5760006200057d565b6200057d86600481518110620004c957fe5b61036052855160051062000593576000620005a5565b620005a586600581518110620004c957fe5b610380528551600610620005bb576000620005cd565b620005cd86600681518110620004c957fe5b6103a0528551600710620005e3576000620005f5565b620005f586600781518110620004c957fe5b6103c081815250505050505050505050505050505050505050505062000c4b565b816200062757620006278162000748565b5050565b8062000627816200079b565b6200064c64e8d4a5100082101560cb62000616565b6200066467016345785d8a000082111560ca62000616565b60078190556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906200069b90839062000bf9565b60405180910390a150565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620006e357600080fd5b505afa158015620006f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200071e919062000b1e565b60ff16905060006200073d6012836200082860201b62000c301760201c565b600a0a949350505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600281511015620007ac5762000825565b600081600081518110620007bc57fe5b602002602001015190506000600190505b825181101562000822576000838281518110620007e657fe5b6020026020010151905062000817816001600160a01b0316846001600160a01b03161060656200061660201b60201c565b9150600101620007cd565b50505b50565b60006200083a83831115600162000616565b508082035b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200088857805160ff1916838001178555620008b8565b82800160010185558215620008b8579182015b82811115620008b85782518255916020019190600101906200089b565b50620008c6929150620008ca565b5090565b5b80821115620008c65760008155600101620008cb565b80516200083f8162000c35565b600082601f830112620008ff578081fd5b81516001600160401b0381111562000915578182fd5b60208082026200092782820162000c02565b838152935081840185830182870184018810156200094457600080fd5b600092505b84831015620009745780516200095f8162000c35565b82526001929092019190830190830162000949565b505050505092915050565b8051600381106200083f57600080fd5b600082601f830112620009a0578081fd5b81516001600160401b03811115620009b6578182fd5b6020620009cc601f8301601f1916820162000c02565b92508183528481838601011115620009e357600080fd5b60005b8281101562000a03578481018201518482018301528101620009e6565b8281111562000a155760008284860101525b50505092915050565b60006020828403121562000a30578081fd5b5051919050565b60008060008060008060008060006101208a8c03121562000a56578485fd5b62000a628b8b620008e1565b985062000a738b60208c016200097f565b60408b01519098506001600160401b038082111562000a90578687fd5b62000a9e8d838e016200098f565b985060608c015191508082111562000ab4578687fd5b62000ac28d838e016200098f565b975060808c015191508082111562000ad8578687fd5b5062000ae78c828d01620008ee565b95505060a08a0151935060c08a0151925060e08a0151915062000b0f8b6101008c01620008e1565b90509295985092959850929598565b60006020828403121562000b30578081fd5b815160ff8116811462000b41578182fd5b9392505050565b60006060820185835260206060818501528186518084526080860191508288019350845b8181101562000b945762000b81855162000c29565b8352938301939183019160010162000b6c565b505084810360408601528551808252908201925081860190845b8181101562000bd65762000bc3835162000c29565b8552938301939183019160010162000bae565b509298975050505050505050565b602081016003831062000bf357fe5b91905290565b90815260200190565b6040518181016001600160401b038111828210171562000c2157600080fd5b604052919050565b6001600160a01b031690565b6001600160a01b03811681146200082557600080fd5b60805160a05160601c60c05160e051610100516101205161014051610160516101805160601c6101a0516101c0516101e05160601c6102005160601c6102205160601c6102405160601c6102605160601c6102805160601c6102a05160601c6102c05160601c6102e05161030051610320516103405161036051610380516103a0516103c05161216862000d5d600039806114c552508061148252508061143f5250806113fc5250806113b95250806113765250806113335250806112e252505050505050505050806110255250806105b4525080610824525080610de0525080610dbc52508061091e525080610f17525080610f59525080610f3852508061080052508061078a52506121686000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c806370a08231116100f957806395d89b4111610097578063d505accf11610071578063d505accf14610371578063d5c096c414610384578063d73dd62314610397578063dd62ed3e146103aa576101b9565b806395d89b411461034e578063a9059cbb14610356578063aaabadc514610369576101b9565b8063851c1bb3116100d3578063851c1bb31461030b57806387ec68171461031e578063893d20e8146103315780638d928af814610346576101b9565b806370a08231146102c457806374f3b009146102d75780637ecebe00146102f8576101b9565b8063313ce5671161016657806338fff2d01161014057806338fff2d01461028057806355c67628146102885780636028bfd41461029057806366188463146102b1576101b9565b8063313ce567146102505780633644e5151461026557806338e9922e1461026d576101b9565b806318160ddd1161019757806318160ddd146102115780631c0de0511461022657806323b872dd1461023d576101b9565b806306fdde03146101be578063095ea7b3146101dc57806316c38b3c146101fc575b600080fd5b6101c66103bd565b6040516101d3919061203b565b60405180910390f35b6101ef6101ea366004611c67565b610472565b6040516101d39190611f4b565b61020f61020a366004611c92565b610489565b005b61021961049d565b6040516101d39190611f6e565b61022e6104a3565b6040516101d393929190611f56565b6101ef61024b366004611bb2565b6104cc565b610258610585565b6040516101d391906120cd565b61021961058a565b61020f61027b366004611e34565b610599565b6102196105b2565b6102196105d6565b6102a361029e366004611cca565b6105dc565b6040516101d39291906120ac565b6101ef6102bf366004611c67565b610613565b6102196102d2366004611b5e565b61067a565b6102ea6102e5366004611cca565b6106a2565b6040516101d3929190611f1d565b610219610306366004611b5e565b61075e565b610219610319366004611dd8565b610786565b6102a361032c366004611cca565b6107d8565b6103396107fe565b6040516101d39190611efc565b610339610822565b6101c6610846565b6101ef610364366004611c67565b6108c5565b6103396108d2565b61020f61037f366004611bf2565b6108dc565b6102ea610392366004611cca565b610a84565b6101ef6103a5366004611c67565b610ba7565b6102196103b8366004611b7a565b610bea565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104675780601f1061043c57610100808354040283529160200191610467565b820191906000526020600020905b81548152906001019060200180831161044a57829003601f168201915b505050505090505b90565b600061047f338484610c46565b5060015b92915050565b610491610cbb565b61049a81610d01565b50565b60025490565b60008060006104b0610d9d565b1592506104bb610dba565b91506104c5610dde565b9050909192565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160209081526040808320338085529252822054919261051791148061050f5750838210155b610197610e02565b610522858585610e10565b3373ffffffffffffffffffffffffffffffffffffffff86161480159061056857507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114155b1561057a5761057a8533858403610c46565b506001949350505050565b601290565b6000610594610f13565b905090565b6105a1610cbb565b6105a9610fb0565b61049a81610fc5565b7f000000000000000000000000000000000000000000000000000000000000000090565b60075490565b600060606105f286516105ed611023565b611047565b610607898989898989896110546110666110cc565b97509795505050505050565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205480831061065c5761065733856000610c46565b610670565b610670338561066b8487610c30565b610c46565b5060019392505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b606080886106e66106b1610822565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161460cd610e02565b6106fb6106f16105b2565b82146101f4610e02565b6060610705611286565b90506107118882611503565b60006060806107258e8e8e8e8e8e8e611054565b9250925092506107358d84611564565b61073f8285611066565b6107498185611066565b909550935050505b5097509795505050505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205490565b60007f0000000000000000000000000000000000000000000000000000000000000000826040516020016107bb929190611e86565b604051602081830303815290604052805190602001209050919050565b600060606107e986516105ed611023565b6106078989898989898961105461161e6110cc565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104675780601f1061043c57610100808354040283529160200191610467565b600061047f338484610e10565b600061059461167f565b6108ea8442111560d1610e02565b73ffffffffffffffffffffffffffffffffffffffff8716600090815260056020908152604080832054905190929161094e917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101611fa3565b604051602081830303815290604052805190602001209050600061097182611706565b9050600060018288888860405160008152602001604052604051610998949392919061201d565b6020604051602081039080840390855afa1580156109ba573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150610a41905073ffffffffffffffffffffffffffffffffffffffff821615801590610a3957508b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6101f8610e02565b73ffffffffffffffffffffffffffffffffffffffff8b166000908152600560205260409020600185019055610a778b8b8b610c46565b5050505050505050505050565b60608088610a936106b1610822565b610a9e6106f16105b2565b6060610aa8611286565b9050610ab261049d565b610b585760006060610ac68d8d8d8a611722565b91509150610adb620f424083101560cc610e02565b610ae96000620f424061172f565b610af88b620f4240840361172f565b610b02818461161e565b80610b0b611023565b67ffffffffffffffff81118015610b2157600080fd5b50604051908082528060200260200182016040528015610b4b578160200160208202803683370190505b5095509550505050610751565b610b628882611503565b6000606080610b768e8e8e8e8e8e8e611054565b925092509250610b868c8461172f565b610b90828561161e565b610b9a8185611066565b9095509350610751915050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161047f91859061066b90866117ec565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b80610c2c81611805565b5050565b6000610c40838311156001610e02565b50900390565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610cae908590611f6e565b60405180910390a3505050565b6000610cea6000357fffffffff0000000000000000000000000000000000000000000000000000000016610786565b905061049a610cf98233611898565b610191610e02565b8015610d2157610d1c610d12610dba565b4210610193610e02565b610d36565b610d36610d2c610dde565b42106101a9610e02565b600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490610d92908390611f4b565b60405180910390a150565b6000610da7610dde565b42118061059457505060065460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b81610c2c57610c2c816119bc565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054610e4582821015610196610e02565b610e6973ffffffffffffffffffffffffffffffffffffffff84161515610199610e02565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681522054610ea690836117ec565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526020819052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f05908690611f6e565b60405180910390a350505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610f80611a29565b30604051602001610f95959493929190611fe4565b60405160208183030381529060405280519060200120905090565b610fc3610fbb610d9d565b610192610e02565b565b610fd864e8d4a5100082101560cb610e02565b610fee67016345785d8a000082111560ca610e02565b60078190556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90610d92908390611f6e565b7f000000000000000000000000000000000000000000000000000000000000000090565b610c2c8183146067610e02565b60006060809750975097945050505050565b60005b611071611023565b8110156110c7576110a883828151811061108757fe5b602002602001015183838151811061109b57fe5b6020026020010151611a2d565b8382815181106110b457fe5b6020908102919091010152600101611069565b505050565b3330146111c85760003073ffffffffffffffffffffffffffffffffffffffff166000366040516110fd929190611eb6565b6000604051808303816000865af19150503d806000811461113a576040519150601f19603f3d011682016040523d82523d6000602084013e61113f565b606091505b50509050806000811461114e57fe5b60046000803e6000517fffffffff00000000000000000000000000000000000000000000000000000000167f43adbafb0000000000000000000000000000000000000000000000000000000081146111aa573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b60606111d2611286565b90506111de8782611503565b600060606111f58c8c8c8c8c8c8c8c63ffffffff16565b509150915061120881848663ffffffff16565b80517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082018390526343adbafb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08301526020027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc82016044820181fd5b60606000611292611023565b905060608167ffffffffffffffff811180156112ad57600080fd5b506040519080825280602002602001820160405280156112d7578160200160208202803683370190505b509050811561131f577f00000000000000000000000000000000000000000000000000000000000000008160008151811061130e57fe5b602002602001018181525050611328565b915061046f9050565b600182111561131f577f00000000000000000000000000000000000000000000000000000000000000008160018151811061135f57fe5b602002602001018181525050600282111561131f577f0000000000000000000000000000000000000000000000000000000000000000816002815181106113a257fe5b602002602001018181525050600382111561131f577f0000000000000000000000000000000000000000000000000000000000000000816003815181106113e557fe5b602002602001018181525050600482111561131f577f00000000000000000000000000000000000000000000000000000000000000008160048151811061142857fe5b602002602001018181525050600582111561131f577f00000000000000000000000000000000000000000000000000000000000000008160058151811061146b57fe5b602002602001018181525050600682111561131f577f0000000000000000000000000000000000000000000000000000000000000000816006815181106114ae57fe5b602002602001018181525050600782111561131f577f0000000000000000000000000000000000000000000000000000000000000000816007815181106114f157fe5b60200260200101818152505091505090565b60005b61150e611023565b8110156110c75761154583828151811061152457fe5b602002602001015183838151811061153857fe5b6020026020010151611a4d565b83828151811061155157fe5b6020908102919091010152600101611506565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205461159982821015610196610e02565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902082820390556002546115d09083610c30565b60025560405160009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610cae908690611f6e565b60005b611629611023565b8110156110c75761166083828151811061163f57fe5b602002602001015183838151811061165357fe5b6020026020010151611a71565b83828151811061166c57fe5b6020908102919091010152600101611621565b6000611689610822565b73ffffffffffffffffffffffffffffffffffffffff1663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156116ce57600080fd5b505afa1580156116e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105949190611e18565b6000611710610f13565b826040516020016107bb929190611ec6565b6000606094509492505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205461175f90826117ec565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205560025461179290826117ec565b60025560405173ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906117e0908590611f6e565b60405180910390a35050565b60008282016117fe8482101583610e02565b9392505050565b6002815110156118145761049a565b60008160008151811061182357fe5b602002602001015190506000600190505b82518110156110c757600083828151811061184b57fe5b6020026020010151905061188e8173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16106065610e02565b9150600101611834565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b6118b76107fe565b73ffffffffffffffffffffffffffffffffffffffff16141580156118df57506118df83611aa4565b15611921576118ec6107fe565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16149050610483565b61192961167f565b73ffffffffffffffffffffffffffffffffffffffff16639be2a8848484306040518463ffffffff1660e01b815260040161196593929190611f77565b60206040518083038186803b15801561197d57600080fd5b505afa158015611991573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b59190611cae565b9050610483565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b4690565b6000611a3c8215156004610e02565b818381611a4557fe5b049392505050565b60008282026117fe841580611a6a575083858381611a6757fe5b04145b6003610e02565b6000611a808215156004610e02565b82611a8d57506000610483565b816001840381611a9957fe5b046001019050610483565b6000611acf7f38e9922e00000000000000000000000000000000000000000000000000000000610786565b909114919050565b600082601f830112611ae7578081fd5b813567ffffffffffffffff811115611afd578182fd5b611b2e60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016120db565b9150808252836020828501011115611b4557600080fd5b8060208401602084013760009082016020015292915050565b600060208284031215611b6f578081fd5b81356117fe81612102565b60008060408385031215611b8c578081fd5b8235611b9781612102565b91506020830135611ba781612102565b809150509250929050565b600080600060608486031215611bc6578081fd5b8335611bd181612102565b92506020840135611be181612102565b929592945050506040919091013590565b600080600080600080600060e0888a031215611c0c578283fd5b8735611c1781612102565b96506020880135611c2781612102565b95506040880135945060608801359350608088013560ff81168114611c4a578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611c79578182fd5b8235611c8481612102565b946020939093013593505050565b600060208284031215611ca3578081fd5b81356117fe81612124565b600060208284031215611cbf578081fd5b81516117fe81612124565b600080600080600080600060e0888a031215611ce4578283fd5b873596506020880135611cf681612102565b95506040880135611d0681612102565b9450606088013567ffffffffffffffff80821115611d22578485fd5b818a0191508a601f830112611d35578485fd5b813581811115611d43578586fd5b60208102611d53602082016120db565b80838252602082019150602086018f6020858901011115611d7257898afd5b8996505b84871015611d9557803583526001969096019560209283019201611d76565b50985050505060808a0135945060a08a0135935060c08a0135915080821115611dbc578283fd5b50611dc98a828b01611ad7565b91505092959891949750929550565b600060208284031215611de9578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146117fe578182fd5b600060208284031215611e29578081fd5b81516117fe81612102565b600060208284031215611e45578081fd5b5035919050565b6000815180845260208085019450808401835b83811015611e7b57815187529582019590820190600101611e5f565b509495945050505050565b9182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6000828483379101908152919050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600060408252611f306040830185611e4c565b8281036020840152611f428185611e4c565b95945050505050565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b92835273ffffffffffffffffffffffffffffffffffffffff918216602084015216604082015260600190565b95865273ffffffffffffffffffffffffffffffffffffffff94851660208701529290931660408501526060840152608083019190915260a082015260c00190565b94855260208501939093526040840191909152606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b818110156120675785810183015185820160400152820161204b565b818111156120785783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000838252604060208301526120c56040830184611e4c565b949350505050565b60ff91909116815260200190565b60405181810167ffffffffffffffff811182821017156120fa57600080fd5b604052919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461049a57600080fd5b801515811461049a57600080fdfea2646970667358221220e134df406e58cded5634b461583ca2537ac50b74c6f2fed8c2e988c67e8f550c64736f6c63430007010033";

type MockBasePoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBasePoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBasePool__factory extends ContractFactory {
  constructor(...args: MockBasePoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    vault: string,
    specialization: BigNumberish,
    name: string,
    symbol: string,
    tokens: string[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBasePool> {
    return super.deploy(
      vault,
      specialization,
      name,
      symbol,
      tokens,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      owner,
      overrides || {}
    ) as Promise<MockBasePool>;
  }
  getDeployTransaction(
    vault: string,
    specialization: BigNumberish,
    name: string,
    symbol: string,
    tokens: string[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vault,
      specialization,
      name,
      symbol,
      tokens,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      owner,
      overrides || {}
    );
  }
  attach(address: string): MockBasePool {
    return super.attach(address) as MockBasePool;
  }
  connect(signer: Signer): MockBasePool__factory {
    return super.connect(signer) as MockBasePool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBasePoolInterface {
    return new utils.Interface(_abi) as MockBasePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBasePool {
    return new Contract(address, _abi, signerOrProvider) as MockBasePool;
  }
}
