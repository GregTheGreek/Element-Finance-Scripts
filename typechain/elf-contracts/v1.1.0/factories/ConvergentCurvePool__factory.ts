/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConvergentCurvePool,
  ConvergentCurvePoolInterface,
} from "../ConvergentCurvePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_bond",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unitSeconds",
        type: "uint256",
      },
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_percentFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_percentFeeGov",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_pauser",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "collectedBase",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collectedBond",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingBase",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingBond",
        type: "uint256",
      },
    ],
    name: "FeeCollection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_BOUND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bond",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "expiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feesBond",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feesUnderlying",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceFeesBond",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceFeesUnderlying",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "currentBalances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFee",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "currentBalances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFee",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "currentBalanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentBalanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "pauseStatus",
        type: "bool",
      },
    ],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "percentFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "percentFeeGov",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveY",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "out",
        type: "bool",
      },
    ],
    name: "solveTradeInvariant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unitSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6102a06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b50604051620046073803806200460783398101604081905262000059916200069a565b6040805180820190915260018152603160f81b602080830191825285519086019081206080529151902060a0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60c052835184918491620000be9160039162000520565b508051620000d490600490602084019062000520565b50505087428a0310620000e657600080fd5b6040516309b2760f60e01b81526000906001600160a01b038916906309b2760f9062000118906002906004016200085a565b602060405180830381600087803b1580156200013357600080fd5b505af115801562000148573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200016e919062000681565b6040805160028082526060808301845293945090916020830190803683370190505090508b6001600160a01b03168d6001600160a01b0316101562000211578c81600081518110620001bc57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508b81600181518110620001eb57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505062000270565b8b816000815181106200022057fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508c816001815181106200024f57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b6001600160a01b03838116600090815260086020908152604091829020805460ff1916600117905581516002808252606082018452938d16936366a9c7d2938793879392919083019080368337019050506040518463ffffffff1660e01b8152600401620002e193929190620007be565b600060405180830381600087803b158015620002fc57600080fd5b505af115801562000311573d6000803e3d6000fd5b5050506001600160601b031960608b901b166101c052506101e0829052610220889052670429d069189e00008710620003675760405162461bcd60e51b81526004016200035e906200086f565b60405180910390fd5b6102408790526001600160601b031960608e901b16610100526040805163313ce56760e01b815290516001600160a01b038f169163313ce567916004808301926020929190829003018186803b158015620003c157600080fd5b505afa158015620003d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003fc919062000794565b60f81b6001600160f81b0319166101205260608c901b6001600160601b031916610140526040805163313ce56760e01b815290516001600160a01b038e169163313ce567916004808301926020929190829003018186803b1580156200046157600080fd5b505afa15801562000476573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200049c919062000794565b60f81b6001600160f81b031916610160526101808b90526101a08a9052606086901b6001600160601b031916610200526001600160a01b038c8116908e161080620004e9576001620004ec565b60005b60ff1661026052806200050157600062000504565b60015b60ff166102805250620008a19c50505050505050505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200056357805160ff191683800117855562000593565b8280016001018555821562000593579182015b828111156200059357825182559160200191906001019062000576565b50620005a1929150620005a5565b5090565b5b80821115620005a15760008155600101620005a6565b80516001600160a01b0381168114620005d457600080fd5b92915050565b600082601f830112620005eb578081fd5b81516001600160401b038082111562000602578283fd5b6040516020601f8401601f191682018101838111838210171562000624578586fd5b806040525081945083825286818588010111156200064157600080fd5b600092505b8383101562000665578583018101518284018201529182019162000646565b83831115620006775760008185840101525b5050505092915050565b60006020828403121562000693578081fd5b5051919050565b60008060008060008060008060008060006101608c8e031215620006bc578687fd5b620006c88d8d620005bc565b9a50620006d98d60208e01620005bc565b995060408c0151985060608c01519750620006f88d60808e01620005bc565b965060a08c0151955060c08c01519450620007178d60e08e01620005bc565b6101008d01519094506001600160401b0381111562000734578384fd5b620007428e828f01620005da565b6101208e015190945090506001600160401b0381111562000761578283fd5b6200076f8e828f01620005da565b925050620007828d6101408e01620005bc565b90509295989b509295989b9093969950565b600060208284031215620007a6578081fd5b815160ff81168114620007b7578182fd5b9392505050565b60006060820185835260206060818501528186518084526080860191508288019350845b818110156200080a57620007f7855162000895565b83529383019391830191600101620007e2565b505084810360408601528551808252908201925081860190845b818110156200084c5762000839835162000895565b8552938301939183019160010162000824565b509298975050505050505050565b60208101600383106200086957fe5b91905290565b6020808252600c908201526b08ccaca40e8dede40d0d2ced60a31b604082015260600190565b6001600160a01b031690565b60805160a05160c05160e0516101005160601c6101205160f81c6101405160601c6101605160f81c610180516101a0516101c05160601c6101e0516102005160601c61022051610240516102605161028051613b6b62000a9c60003980610b2f52806111d3528061158e52806115ea52806116bf52806118b252806118e652806119125280611a445280611a705280611b4a52806123e752806124a9528061253d52806130e1525080610ac7528061119f52806114f75280611553528061167e52806117c852806117fb528061184352806119bc5280611a045280611ab35280611b0f52806123ad5280612468528061250452806130ad52508061077f52806116fb52806117295250806107c752806120635250806107eb528061091c5280610a53528061112b52508061075b52806109ef52806110ae5250806109b05280610c7e5280610d72528061106f52508061126e5280611c0e5250806107a35280611ba85280611bd752508061129252806115c15280611b7f5280611e98528061230152508061083a5280611e5a5280611f175280611f66528061201a528061215152806122c15250806106eb528061152a5280611ae85280611e2b528061229b5250806108b85280611ded5280611edb5280611fa2528061225b525080610ee85250806114425250806114845250806114635250613b6b6000f3fe608060405234801561001057600080fd5b50600436106102925760003560e01c80636f8f69b7116101605780639d2c110c116100d8578063dd62ed3e1161008c578063f1cd96ba11610071578063f1cd96ba146104c6578063f46c39e7146104ce578063f7b94283146104e357610292565b8063dd62ed3e146104ab578063eaee3f3b146104be57610292565b8063d505accf116100bd578063d505accf14610472578063d5c096c414610485578063d73dd6231461049857610292565b80639d2c110c1461044c578063a9059cbb1461045f57610292565b8063791550501161012f57806380f51c121161011457806380f51c12146104295780638d928af81461043c57806395d89b411461044457610292565b806379155050146104035780637ecebe001461041657610292565b80636f8f69b7146103b457806370a08231146103bc5780637180c8ca146103cf57806374f3b009146103e257610292565b8063386ade671161020e5780635aa6e675116101c257806364c9ec6f116101a757806364c9ec6f1461039157806366188463146103995780636f307dc3146103ac57610292565b80635aa6e675146103745780635c975abb1461038957610292565b806341bd436a116101f357806341bd436a1461035c5780634665096d146103645780634c1a41151461036c57610292565b8063386ade671461033f57806338fff2d01461035457610292565b806323b872dd1161026557806329e4f3621161024a57806329e4f36214610327578063313ce5671461032f5780633644e5151461033757610292565b806323b872dd146102ff57806325a760c21461031257610292565b806302329a291461029757806306fdde03146102ac578063095ea7b3146102ca57806318160ddd146102ea575b600080fd5b6102aa6102a536600461347e565b6104eb565b005b6102b4610577565b6040516102c19190613803565b60405180910390f35b6102dd6102d8366004613420565b61062b565b6040516102c19190613771565b6102f2610642565b6040516102c1919061377c565b6102dd61030d366004613336565b610648565b61031a6106e9565b6040516102c19190613ae8565b6102f261070d565b61031a610719565b6102f261071e565b61034761072d565b6040516102c19190613acb565b6102f2610759565b6102f261077d565b6102f26107a1565b6102f26107c5565b61037c6107e9565b6040516102c1919061372f565b6102dd61080d565b61037c610838565b6102dd6103a7366004613420565b61085c565b61037c6108b6565b6103476108da565b6102f26103ca3660046132e2565b6108f2565b6102aa6103dd3660046133eb565b610911565b6103f56103f0366004613499565b6109a2565b6040516102c1929190613743565b6102f2610411366004613680565b610b9b565b6102f26104243660046132e2565b610c4c565b6102dd6104373660046132e2565b610c67565b61037c610c7c565b6102b4610ca0565b6102f261045a36600461356c565b610d1f565b6102dd61046d366004613420565b610ea6565b6102aa610480366004613376565b610eb3565b6103f5610493366004613499565b61101a565b6102dd6104a6366004613420565b61120b565b6102f26104b93660046132fe565b611241565b6102f261126c565b61031a611290565b6104d66112b4565b6040516102c19190613aaf565b6104d66112de565b3360009081526008602052604090205460ff166105235760405162461bcd60e51b815260040161051a90613976565b60405180910390fd5b600680549115157e01000000000000000000000000000000000000000000000000000000000000027fff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909216919091179055565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106215780601f106105f657610100808354040283529160200191610621565b820191906000526020600020905b81548152906001019060200180831161060457829003601f168201915b5050505050905090565b60006106383384846112f5565b5060015b92915050565b60025490565b6001600160a01b0383166000818152600160209081526040808320338085529252822054919261068691148061067e5750838210155b61019761135d565b61069185858561136f565b336001600160a01b038616148015906106ca57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114155b156106dc576106dc85338584036112f5565b60019150505b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b670429d069189e000081565b601290565b600061072861143e565b905090565b60075470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6006547e01000000000000000000000000000000000000000000000000000000000000900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b3360009081526001602090815260408083206001600160a01b038616845290915281205480831061089857610893338560006112f5565b6108ac565b6108ac33856108a784876114db565b6112f5565b5060019392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6007546fffffffffffffffffffffffffffffffff1681565b6001600160a01b0381166000908152602081905260409020545b919050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109595760405162461bcd60e51b815260040161051a906138e2565b6001600160a01b0391909116600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b606080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109ed5760405162461bcd60e51b815260040161051a90613874565b7f00000000000000000000000000000000000000000000000000000000000000008a14610a2c5760405162461bcd60e51b815260040161051a906139e4565b6000610a3a84860186613668565b9050610a45886114f1565b610a4f8887611622565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168a6001600160a01b03161415610b6d576040805160028082526060820183529091602083019080368337505060075482519295506fffffffffffffffffffffffffffffffff16918591507f0000000000000000000000000000000000000000000000000000000000000000908110610aef57fe5b602002602001018181525050600760109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16837f000000000000000000000000000000000000000000000000000000000000000081518110610b5857fe5b60209081029190910101526000600755610b7b565b610b7881898c611979565b92505b610b8483611aad565b610b8d82611aad565b509850989650505050505050565b600080610ba6611ba3565b90506000610bb48683611c5b565b90506000610bc28684611c5b565b9050600085610be357610bde610bd8898b6114db565b85611c5b565b610bef565b610bef89890185611c5b565b90506000610bff848401836114db565b9050610c1c81610c17670de0b6b3a764000088611d98565b611c5b565b905086610c3257610c2d81896114db565b610c3c565b610c3c88826114db565b955050505050505b949350505050565b6001600160a01b031660009081526005602052604090205490565b60086020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106215780601f106105f657610100808354040283529160200191610621565b6006546000907e01000000000000000000000000000000000000000000000000000000000000900460ff1615610d675760405162461bcd60e51b815260040161051a906138ab565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610daf5760405162461bcd60e51b815260040161051a90613874565b6000808086516001811115610dc057fe5b1490508015610de257610ddb86606001518760200151611de9565b9150610df7565b610df486606001518760400151611de9565b91505b610e05858760200151611de9565b9450610e15848760400151611de9565b9350600080610e2e878960200151888b60400151611ed6565b915091508215610e75576000610e4685848487610b9b565b9050610e5985828b604001516000612010565b9050610e69818a60400151612257565b955050505050506106e2565b6000610e8385838587610b9b565b9050610e9681868b604001516001612010565b9050610e69818a60200151612257565b600061063833848461136f565b610ec18442111560d161135d565b6001600160a01b0387166000908152600560209081526040808320549051909291610f18917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101613785565b6040516020818303038152906040528051906020012090506000610f3b82612325565b9050600060018288888860405160008152602001604052604051610f6294939291906137e5565b6020604051602081039080840390855afa158015610f84573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150610fe490506001600160a01b03821615801590610fdc57508b6001600160a01b0316826001600160a01b0316145b6101f861135d565b6001600160a01b038b16600090815260056020526040902060018501905561100d8b8b8b6112f5565b5050505050505050505050565b60065460609081907e01000000000000000000000000000000000000000000000000000000000000900460ff16156110645760405162461bcd60e51b815260040161051a906138ab565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110ac5760405162461bcd60e51b815260040161051a90613874565b7f00000000000000000000000000000000000000000000000000000000000000008a146110eb5760405162461bcd60e51b815260040161051a906139e4565b60606110f98486018661344b565b90508751600214801561110d575080516002145b6111295760405162461bcd60e51b815260040161051a906139ad565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316896001600160a01b0316141561117b5760405162461bcd60e51b815260040161051a90613a52565b611184886114f1565b61118d816114f1565b6111978887611622565b9150610b78817f0000000000000000000000000000000000000000000000000000000000000000815181106111c857fe5b6020026020010151827f0000000000000000000000000000000000000000000000000000000000000000815181106111fc57fe5b60200260200101518a8c61235e565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916106389185906108a79086612581565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6006546f0100000000000000000000000000000090046effffffffffffffffffffffffffffff1681565b6006546effffffffffffffffffffffffffffff1681565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061135090859061377c565b60405180910390a3505050565b8161136b5761136b81612593565b5050565b6001600160a01b0383166000908152602081905260409020546113978282101561019661135d565b6113ae6001600160a01b038416151561019961135d565b6001600160a01b038085166000908152602081905260408082208585039055918516815220546113de9083612581565b6001600160a01b0380851660008181526020819052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061143090869061377c565b60405180910390a350505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006114ab6125e6565b306040516020016114c09594939291906137b9565b60405160208183030381529060405280519060200120905090565b60006114eb83831115600161135d565b50900390565b611550817f00000000000000000000000000000000000000000000000000000000000000008151811061152057fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000060126125ea565b817f00000000000000000000000000000000000000000000000000000000000000008151811061157c57fe5b6020026020010181815250506115e7817f0000000000000000000000000000000000000000000000000000000000000000815181106115b757fe5b60200260200101517f000000000000000000000000000000000000000000000000000000000000000060126125ea565b817f00000000000000000000000000000000000000000000000000000000000000008151811061161357fe5b60200260200101818152505050565b60065460408051600280825260608083018452936effffffffffffffffffffffffffffff808216946f010000000000000000000000000000009092041692919060208301908036833701905050925061167b8285612637565b837f0000000000000000000000000000000000000000000000000000000000000000815181106116a757fe5b60209081029190910101526116bc8185612637565b837f0000000000000000000000000000000000000000000000000000000000000000815181106116e857fe5b6020908102919091010152600061171f837f0000000000000000000000000000000000000000000000000000000000000000612637565b9050600061174d837f0000000000000000000000000000000000000000000000000000000000000000612637565b600780547fffffffffffffffffffffffffffffffff0000000000000000000000000000000081166fffffffffffffffffffffffffffffffff918216860182161780821670010000000000000000000000000000000091829004831685018316909102179182905587519293506118409291169061183a9088907f00000000000000000000000000000000000000000000000000000000000000009081106117f057fe5b60200260200101518a7f00000000000000000000000000000000000000000000000000000000000000008151811061182457fe5b60200260200101516114db90919063ffffffff16565b906114db565b877f00000000000000000000000000000000000000000000000000000000000000008151811061186c57fe5b60200260200101818152505061190f600760109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1661183a877f0000000000000000000000000000000000000000000000000000000000000000815181106118db57fe5b60200260200101518a7f00000000000000000000000000000000000000000000000000000000000000008151811061182457fe5b877f00000000000000000000000000000000000000000000000000000000000000008151811061193b57fe5b60209081029190910101525050600680547fffff00000000000000000000000000000000000000000000000000000000000016905550909392505050565b60606000611985610642565b9050611991838661266d565b6040805160028082526060820183529091602083019080368337019050509150611a01816119fb87877f0000000000000000000000000000000000000000000000000000000000000000815181106119e557fe5b602002602001015161263790919063ffffffff16565b90611d98565b827f000000000000000000000000000000000000000000000000000000000000000081518110611a2d57fe5b602002602001018181525050611a6d816119fb87877f0000000000000000000000000000000000000000000000000000000000000000815181106119e557fe5b827f000000000000000000000000000000000000000000000000000000000000000081518110611a9957fe5b602002602001018181525050509392505050565b611b0c817f000000000000000000000000000000000000000000000000000000000000000081518110611adc57fe5b602002602001015160127f00000000000000000000000000000000000000000000000000000000000000006125ea565b817f000000000000000000000000000000000000000000000000000000000000000081518110611b3857fe5b6020026020010181815250506115e7817f000000000000000000000000000000000000000000000000000000000000000081518110611b7357fe5b602002602001015160127f00000000000000000000000000000000000000000000000000000000000000006125ea565b6000807f00000000000000000000000000000000000000000000000000000000000000004210611bd4576000611bf8565b427f0000000000000000000000000000000000000000000000000000000000000000035b670de0b6b3a76400009081029150611c339082907f000000000000000000000000000000000000000000000000000000000000000002611d98565b90506000611c49670de0b6b3a7640000836114db565b905080611c5557600080fd5b91505090565b600081611c715750670de0b6b3a764000061063c565b82611c7e5750600061063c565b611cab7f80000000000000000000000000000000000000000000000000000000000000008410600661135d565b82611cd1770bce5086492111aea88f4bb1ca6bcf584181ea8059f765328410600761135d565b826000670c7d713b49da000083138015611cf25750670f43fc2c04ee000083125b15611d29576000611d0284612700565b9050670de0b6b3a764000080820784020583670de0b6b3a764000083050201915050611d37565b81611d3384612837565b0290505b670de0b6b3a76400009005611d857ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc00008212801590611d7e575068070c1cc73b00c800008213155b600861135d565b611d8e81612bd7565b9695505050505050565b6000611da7821515600461135d565b82611db45750600061063c565b670de0b6b3a764000083810290611dd790858381611dce57fe5b0414600561135d565b828181611de057fe5b0491505061063c565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611e5857611e51837f000000000000000000000000000000000000000000000000000000000000000060126125ea565b905061063c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611ebe57611e51837f000000000000000000000000000000000000000000000000000000000000000060126125ea565b60405162461bcd60e51b815260040161051a90613a1b565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316148015611f4b57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316145b15611f645785611f59610642565b850191509150612007565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316148015611fd657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316145b15611fef57611fe3610642565b86018491509150612007565b60405162461bcd60e51b815260040161051a90613919565b94509492505050565b6000811561214f577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156120dd57600061208861206186886114db565b7f000000000000000000000000000000000000000000000000000000000000000090612637565b600680546effffffffffffffffffffffffffffff8082168401167fffffffffffffffffffffffffffffffffff00000000000000000000000000000090911617905590506120d58682612581565b915050610c44565b60006120ec61206187876114db565b600680546effffffffffffffffffffffffffffff6f0100000000000000000000000000000080830482168501909116027fffff000000000000000000000000000000ffffffffffffffffffffffffffffff90911617905590506120d58682612581565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156121fb57600061219861206186886114db565b600680546effffffffffffffffffffffffffffff6f0100000000000000000000000000000080830482168501909116027fffff000000000000000000000000000000ffffffffffffffffffffffffffffff90911617905590506120d585826114db565b600061220a61206187876114db565b600680546effffffffffffffffffffffffffffff8082168401167fffffffffffffffffffffffffffffffffff00000000000000000000000000000090911617905590506120d585826114db565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156122bf57611e518360127f00000000000000000000000000000000000000000000000000000000000000006125ea565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611ebe57611e518360127f00000000000000000000000000000000000000000000000000000000000000006125ea565b600061232f61143e565b826040516020016123419291906136f9565b604051602081830303815290604052805190602001209050919050565b604080516002808252606080830184529260208301908036833701905050905060008061238a856130a7565b915091506000612398610642565b905080612424576123a9858961311b565b87847f0000000000000000000000000000000000000000000000000000000000000000815181106123d657fe5b6020026020010181815250506000847f00000000000000000000000000000000000000000000000000000000000000008151811061241057fe5b602002602001018181525050505050610c44565b60006124308484611d98565b9050600061243e828a612637565b9050898111156124e4576000612458866119fb8d87612637565b9050612464888261311b565b8a877f00000000000000000000000000000000000000000000000000000000000000008151811061249157fe5b60209081029190910101526124a68b84611d98565b877f0000000000000000000000000000000000000000000000000000000000000000815181106124d257fe5b60200260200101818152505050612574565b60006124f4866119fb8487612637565b9050612500888261311b565b81877f00000000000000000000000000000000000000000000000000000000000000008151811061252d57fe5b60200260200101818152505089877f00000000000000000000000000000000000000000000000000000000000000008151811061256657fe5b602002602001018181525050505b5050505050949350505050565b60008282016106e2848210158361135d565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b4690565b60008160ff168360ff1611156126135781830360ff16600a0a848161260b57fe5b04935061262f565b8160ff168360ff16101561262f5782820360ff16600a0a840293505b509192915050565b600082820261265b84158061265457508385838161265157fe5b04145b600361135d565b670de0b6b3a764000090049392505050565b6001600160a01b0382166000908152602081905260409020546126958282101561019661135d565b6001600160a01b038316600090815260208190526040902082820390556002546126bf90836114db565b6002556040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061135090869061377c565b670de0b6b3a7640000026000806ec097ce7bc90715b34b9f1000000000808401907fffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f0000000008501028161274c57fe5b05905060006ec097ce7bc90715b34b9f100000000082800205905081806ec097ce7bc90715b34b9f100000000081840205915060038205016ec097ce7bc90715b34b9f100000000082840205915060058205016ec097ce7bc90715b34b9f100000000082840205915060078205016ec097ce7bc90715b34b9f100000000082840205915060098205016ec097ce7bc90715b34b9f1000000000828402059150600b8205016ec097ce7bc90715b34b9f1000000000828402059150600d8205016ec097ce7bc90715b34b9f1000000000828402059150600f826002919005919091010295945050505050565b6000670de0b6b3a76400008212156128745761286a826ec097ce7bc90715b34b9f10000000008161286457fe5b05612837565b600003905061090c565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c000000000000083126128c557770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e00000083126128fd576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff00840008312612945576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312612980576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf85083126129b757693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e283126129ee57690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d038312612a235768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb417461211108312612a4e57680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312612a83576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f17757889379378312612ab8576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b2866038312612aec576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac8312612b20576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d631000008086030281612b4357fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b6000612c1c7ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc00008312158015612c15575068070c1cc73b00c800008313155b600961135d565b6000821215612c5057612c3182600003612bd7565b6ec097ce7bc90715b34b9f100000000081612c4857fe5b05905061090c565b60006806f05b59d3b20000008312612ca657507ffffffffffffffffffffffffffffffffffffffffffffffff90fa4a62c4e00000090910190770195e54c5dd42177f53a27172fa9ec630262827000000000612cf2565b6803782dace9d90000008312612cee57507ffffffffffffffffffffffffffffffffffffffffffffffffc87d2531627000000909101906b1425982cf597cd205cef7380612cf2565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac620000008412612d58577fffffffffffffffffffffffffffffffffffffffffffffff5287143a539e0000009093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d6310000008412612daa577fffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf0000009093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b188000008412612dfa577fffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e78000009093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c4000008412612e4a577fffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c000009093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac62000008412612e99577ffffffffffffffffffffffffffffffffffffffffffffffff5287143a539e000009093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d631000008412612ee8577ffffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf000009093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b18800008412612f37577ffffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e7800009093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c400008412612f86577ffffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c00009093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b600080827f0000000000000000000000000000000000000000000000000000000000000000815181106130d657fe5b6020026020010151837f00000000000000000000000000000000000000000000000000000000000000008151811061310a57fe5b602002602001015191509150915091565b6001600160a01b03821660009081526020819052604090205461313e9082612581565b6001600160a01b0383166000908152602081905260409020556002546131649082612581565b6002556040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906131a590859061377c565b60405180910390a35050565b803561063c81613b1d565b600082601f8301126131cc578081fd5b813567ffffffffffffffff8111156131e2578182fd5b60208082026131f2828201613af6565b8381529350818401858301828701840188101561320e57600080fd5b600092505b84831015613231578035825260019290920191908301908301613213565b505050505092915050565b8035801515811461063c57600080fd5b600082601f83011261325c578081fd5b813567ffffffffffffffff811115613272578182fd5b6132a360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601613af6565b91508082528360208285010111156132ba57600080fd5b8060208401602084013760009082016020015292915050565b80356002811061063c57600080fd5b6000602082840312156132f3578081fd5b81356106e281613b1d565b60008060408385031215613310578081fd5b823561331b81613b1d565b9150602083013561332b81613b1d565b809150509250929050565b60008060006060848603121561334a578081fd5b833561335581613b1d565b9250602084013561336581613b1d565b929592945050506040919091013590565b600080600080600080600060e0888a031215613390578283fd5b873561339b81613b1d565b965060208801356133ab81613b1d565b95506040880135945060608801359350608088013560ff811681146133ce578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156133fd578182fd5b823561340881613b1d565b9150613417846020850161323c565b90509250929050565b60008060408385031215613432578182fd5b823561343d81613b1d565b946020939093013593505050565b60006020828403121561345c578081fd5b813567ffffffffffffffff811115613472578182fd5b610c44848285016131bc565b60006020828403121561348f578081fd5b6106e2838361323c565b60008060008060008060008060e0898b0312156134b4578081fd5b8835975060208901356134c681613b1d565b965060408901356134d681613b1d565b9550606089013567ffffffffffffffff808211156134f2578283fd5b6134fe8c838d016131bc565b965060808b0135955060a08b0135945060c08b0135915080821115613521578283fd5b818b0191508b601f830112613534578283fd5b813581811115613542578384fd5b8c6020828501011115613553578384fd5b6020830194508093505050509295985092959890939650565b600080600060608486031215613580578081fd5b833567ffffffffffffffff80821115613597578283fd5b81860191506101208083890312156135ad578384fd5b6135b681613af6565b90506135c288846132d3565b81526135d188602085016131b1565b60208201526135e388604085016131b1565b6040820152606083013560608201526080830135608082015260a083013560a08201526136138860c085016131b1565b60c08201526136258860e085016131b1565b60e0820152610100808401358381111561363d578586fd5b6136498a82870161324c565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215613679578081fd5b5035919050565b60008060008060808587031215613695578182fd5b8435935060208501359250604085013591506136b4866060870161323c565b905092959194509250565b6000815180845260208085019450808401835b838110156136ee578151875295820195908201906001016136d2565b509495945050505050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b60006040825261375660408301856136bf565b828103602084015261376881856136bf565b95945050505050565b901515815260200190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b8181101561382f57858101830151858201604001528201613813565b818111156138405783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526010908201527f4e6f6e205661756c742063616c6c657200000000000000000000000000000000604082015260600190565b60208082526006908201527f5061757365640000000000000000000000000000000000000000000000000000604082015260600190565b60208082526010908201527f53656e646572206e6f74204f776e657200000000000000000000000000000000604082015260600190565b60208082526022908201527f546f6b656e207265717565737420646f65736e2774206d617463682073746f7260408201527f6564000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526015908201527f53656e646572206e6f7420417574686f72697a65640000000000000000000000604082015260600190565b6020808252600e908201527f496e76616c696420666f726d6174000000000000000000000000000000000000604082015260600190565b6020808252600d908201527f57726f6e6720706f6f6c20696400000000000000000000000000000000000000604082015260600190565b6020808252601a908201527f43616c6c65642077697468206e6f6e20706f6f6c20746f6b656e000000000000604082015260600190565b60208082526025908201527f476f7665726e616e63652061646472657373204c5020776f756c64206265206c60408201527f6f636b6564000000000000000000000000000000000000000000000000000000606082015260800190565b6effffffffffffffffffffffffffffff91909116815260200190565b6fffffffffffffffffffffffffffffffff91909116815260200190565b60ff91909116815260200190565b60405181810167ffffffffffffffff81118282101715613b1557600080fd5b604052919050565b6001600160a01b0381168114613b3257600080fd5b5056fea264697066735822122062385ba561002c4c3cbe6b7e05f77806788ecb112b0b5cc06387cad05665d1df64736f6c63430007010033";

type ConvergentCurvePoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConvergentCurvePoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConvergentCurvePool__factory extends ContractFactory {
  constructor(...args: ConvergentCurvePoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _underlying: string,
    _bond: string,
    _expiration: BigNumberish,
    _unitSeconds: BigNumberish,
    vault: string,
    _percentFee: BigNumberish,
    _percentFeeGov: BigNumberish,
    _governance: string,
    name: string,
    symbol: string,
    _pauser: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConvergentCurvePool> {
    return super.deploy(
      _underlying,
      _bond,
      _expiration,
      _unitSeconds,
      vault,
      _percentFee,
      _percentFeeGov,
      _governance,
      name,
      symbol,
      _pauser,
      overrides || {}
    ) as Promise<ConvergentCurvePool>;
  }
  getDeployTransaction(
    _underlying: string,
    _bond: string,
    _expiration: BigNumberish,
    _unitSeconds: BigNumberish,
    vault: string,
    _percentFee: BigNumberish,
    _percentFeeGov: BigNumberish,
    _governance: string,
    name: string,
    symbol: string,
    _pauser: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _underlying,
      _bond,
      _expiration,
      _unitSeconds,
      vault,
      _percentFee,
      _percentFeeGov,
      _governance,
      name,
      symbol,
      _pauser,
      overrides || {}
    );
  }
  attach(address: string): ConvergentCurvePool {
    return super.attach(address) as ConvergentCurvePool;
  }
  connect(signer: Signer): ConvergentCurvePool__factory {
    return super.connect(signer) as ConvergentCurvePool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConvergentCurvePoolInterface {
    return new utils.Interface(_abi) as ConvergentCurvePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConvergentCurvePool {
    return new Contract(address, _abi, signerOrProvider) as ConvergentCurvePool;
  }
}
