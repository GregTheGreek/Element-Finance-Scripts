/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZapSwapCurve, ZapSwapCurveInterface } from "../ZapSwapCurve";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "__balancer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "spenders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "setApprovalsFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_newState",
        type: "bool",
      },
    ],
    name: "setIsFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "balancerPoolId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "contract IAsset",
            name: "principalToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minPtAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "needsChildZap",
            type: "bool",
          },
        ],
        internalType: "struct ZapSwapCurve.ZapInInfo",
        name: "_info",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "curvePool",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "roots",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "parentIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minLpAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ZapSwapCurve.ZapCurveLpIn",
        name: "_zap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "curvePool",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "roots",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "parentIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minLpAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ZapSwapCurve.ZapCurveLpIn",
        name: "_childZap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IERC20Permit",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct ZapSwapCurve.PermitData[]",
        name: "_permitData",
        type: "tuple[]",
      },
    ],
    name: "zapIn",
    outputs: [
      {
        internalType: "uint256",
        name: "ptAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "balancerPoolId",
            type: "bytes32",
          },
          {
            internalType: "contract IAsset",
            name: "principalToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "principalTokenAmount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minBaseTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minRootTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "targetNeedsChildZap",
            type: "bool",
          },
        ],
        internalType: "struct ZapSwapCurve.ZapOutInfo",
        name: "_info",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "curvePool",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "int128",
            name: "rootTokenIdx",
            type: "int128",
          },
          {
            internalType: "address",
            name: "rootToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "curveRemoveLiqFnIsUint256",
            type: "bool",
          },
        ],
        internalType: "struct ZapSwapCurve.ZapCurveLpOut",
        name: "_zap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "curvePool",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "int128",
            name: "rootTokenIdx",
            type: "int128",
          },
          {
            internalType: "address",
            name: "rootToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "curveRemoveLiqFnIsUint256",
            type: "bool",
          },
        ],
        internalType: "struct ZapSwapCurve.ZapCurveLpOut",
        name: "_childZap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IERC20Permit",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct ZapSwapCurve.PermitData[]",
        name: "_permitData",
        type: "tuple[]",
      },
    ],
    name: "zapOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002543380380620025438339810160408190526200003491620000a0565b600080546001600160a01b031916339081179091556001600255620000599062000079565b60601b6001600160601b0319166080526003805460ff19169055620000d0565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b600060208284031215620000b2578081fd5b81516001600160a01b0381168114620000c9578182fd5b9392505050565b60805160601c61244d620000f6600039600081816103fc015261086d015261244d6000f3fe6080604052600436106100c05760003560e01c80638da5cb5b11610074578063c24bca011161004e578063c24bca01146101db578063e5355a22146101fb578063fe9fbb801461020e576100c7565b80638da5cb5b14610179578063b6a5d7de1461019b578063b9181611146101bb576100c7565b806333eeb147116100a557806333eeb1471461010e57806364eda74b146101395780636a978af614610159576100c7565b806313af4035146100cc57806327c97fa5146100ee576100c7565b366100c757005b600080fd5b3480156100d857600080fd5b506100ec6100e7366004611a4b565b61022e565b005b3480156100fa57600080fd5b506100ec610109366004611a4b565b61029b565b34801561011a57600080fd5b50610123610304565b6040516101309190611efd565b60405180910390f35b34801561014557600080fd5b506100ec610154366004611aeb565b61030d565b61016c610167366004611c2d565b610363565b604051610130919061228e565b34801561018557600080fd5b5061018e6105b3565b6040516101309190611de1565b3480156101a757600080fd5b506100ec6101b6366004611a4b565b6105c2565b3480156101c757600080fd5b506101236101d6366004611a4b565b6105f8565b3480156101e757600080fd5b506100ec6101f6366004611a67565b61060d565b61016c610209366004611b23565b610778565b34801561021a57600080fd5b50610123610229366004611a4b565b6109cd565b6000546001600160a01b031633146102615760405162461bcd60e51b815260040161025890611f1b565b60405180910390fd5b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102c55760405162461bcd60e51b815260040161025890611f1b565b6001600160a01b0316600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60035460ff1681565b610316336109cd565b6103325760405162461bcd60e51b815260040161025890611f52565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60006002805414156103875760405162461bcd60e51b81526004016102589061211f565b6002805560035460ff16156103ae5760405162461bcd60e51b8152600401610258906120e8565b816103b8816109ef565b6103e03330886040015189602001516001600160a01b0316610bb0909392919063ffffffff16565b6040805160c08101909152865181526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906352bbbe2990602081018481526020018a602001516001600160a01b0316815260200189602001516001600160a01b031681526020018a6040015181526020016040518060400160405280600481526020017f30783030000000000000000000000000000000000000000000000000000000008152508152506040518060800160405280306001600160a01b03168152602001600015158152602001306001600160a01b03168152602001600015158152508a608001518b60c001516040518563ffffffff1660e01b81526004016104f894939291906121ea565b602060405180830381600087803b15801561051257600080fd5b505af1158015610526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054a9190611d1f565b905061058186828960e00151610564578960a00151610567565b60005b8a60e0015161057a578a6060015161057c565b305b610c53565b92508660e00151156105a4576105a185848960a001518a60600151610c53565b92505b50506001600255949350505050565b6000546001600160a01b031681565b6000546001600160a01b031633146105ec5760405162461bcd60e51b815260040161025890611f1b565b6105f581610e71565b50565b60016020526000908152604090205460ff1681565b610616336109cd565b6106325760405162461bcd60e51b815260040161025890611f52565b81518351146106535760405162461bcd60e51b81526004016102589061201d565b80518351146106745760405162461bcd60e51b81526004016102589061201d565b60005b8351811015610772576106ed8382815181106106a357634e487b7160e01b600052603260045260246000fd5b602002602001015160008684815181106106cd57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316610eb69092919063ffffffff16565b61076083828151811061071057634e487b7160e01b600052603260045260246000fd5b602002602001015183838151811061073857634e487b7160e01b600052603260045260246000fd5b60200260200101518684815181106106cd57634e487b7160e01b600052603260045260246000fd5b8061076a8161236f565b915050610677565b50505050565b600060028054141561079c5760405162461bcd60e51b81526004016102589061211f565b6002805560035460ff16156107c35760405162461bcd60e51b8152600401610258906120e8565b816107cd816109ef565b6107d5611701565b8660a001511561084557600061080886604051806060016040528060008152602001600081526020016000815250610f97565b9050808287608001516003811061082f57634e487b7160e01b600052603260045260246000fd5b602002018181516108409190612314565b905250505b60006108518783610f97565b6040805160c08101909152895181529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906352bbbe299060208101600081526020018a602001516001600160a01b031681526020018b604001516001600160a01b031681526020018481526020016040518060400160405280600481526020017f30783030000000000000000000000000000000000000000000000000000000008152508152506040518060800160405280306001600160a01b031681526020016000151581526020018c602001516001600160a01b03168152602001600015158152508b606001518c608001516040518563ffffffff1660e01b815260040161096a94939291906121ea565b602060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc9190611d1f565b600160025598975050505050505050565b6001600160a01b03811660009081526001602052604090205460ff165b919050565b8051156105f55760005b8151811015610bac57818181518110610a2257634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b031663d505accf33848481518110610a5d57634e487b7160e01b600052603260045260246000fd5b602002602001015160200151858581518110610a8957634e487b7160e01b600052603260045260246000fd5b602002602001015160400151868681518110610ab557634e487b7160e01b600052603260045260246000fd5b602002602001015160600151878781518110610ae157634e487b7160e01b600052603260045260246000fd5b602002602001015160c00151888881518110610b0d57634e487b7160e01b600052603260045260246000fd5b602002602001015160800151898981518110610b3957634e487b7160e01b600052603260045260246000fd5b602002602001015160a001516040518863ffffffff1660e01b8152600401610b679796959493929190611e33565b600060405180830381600087803b158015610b8157600080fd5b505af1158015610b95573d6000803e3d6000fd5b505050508080610ba49061236f565b9150506109f9565b5050565b610772846323b872dd60e01b858585604051602401610bd193929190611e0f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526114c2565b60608401516000906001600160a01b0383811630141591839173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee911614610c9a57610c958760600151611551565b610c9c565b475b9050866080015115610d3257865160408089015190517ff1dc3cc90000000000000000000000000000000000000000000000000000000081526001600160a01b039092169163f1dc3cc991610cfb918a91600f0b908a906004016122b0565b600060405180830381600087803b158015610d1557600080fd5b505af1158015610d29573d6000803e3d6000fd5b50505050610db5565b865160408089015190517f1a4d01d20000000000000000000000000000000000000000000000000000000081526001600160a01b0390921691631a4d01d291610d82918a91908a90600401612297565b600060405180830381600087803b158015610d9c57600080fd5b505af1158015610db0573d6000803e3d6000fd5b505050505b60608701516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610e2d57610de8814761232c565b92508115610e28576040516001600160a01b0385169084156108fc029085906000818181858888f19350505050158015610e26573d6000803e3d6000fd5b505b610e67565b80610e3b8860600151611551565b610e45919061232c565b92508115610e67576060870151610e67906001600160a01b0316308686610bb0565b5050949350505050565b6001600160a01b0316600090815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b801580610f5757506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b0384169063dd62ed3e90610f059030908690600401611df5565b60206040518083038186803b158015610f1d57600080fd5b505afa158015610f31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f559190611d1f565b155b610f735760405162461bcd60e51b815260040161025890612156565b610f928363095ea7b360e01b8484604051602401610bd1929190611e74565b505050565b600082604001515160021480610fb257508260400151516003145b610fce5760405162461bcd60e51b8152600401610258906121b3565b6000805b8460400151518160ff1610156112b15760008086604001518360ff168151811061100c57634e487b7160e01b600052603260045260246000fd5b6020026020010151119050808061104a57506000858360ff166003811061104357634e487b7160e01b600052603260045260246000fd5b6020020151115b6110545782611057565b60015b925080611064575061129f565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b031686606001518360ff16815181106110a957634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031614156111785785604001518260ff16815181106110e757634e487b7160e01b600052603260045260246000fd5b6020026020010151341461110d5760405162461bcd60e51b8152600401610258906120b1565b85604001518260ff168151811061113457634e487b7160e01b600052603260045260246000fd5b6020026020010151858360ff166003811061115f57634e487b7160e01b600052603260045260246000fd5b602002018181516111709190612314565b90525061129d565b60006111b187606001518460ff16815181106111a457634e487b7160e01b600052603260045260246000fd5b6020026020010151611551565b905061122f333089604001518660ff16815181106111df57634e487b7160e01b600052603260045260246000fd5b60200260200101518a606001518760ff168151811061120e57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316610bb0909392919063ffffffff16565b8061125a88606001518560ff16815181106111a457634e487b7160e01b600052603260045260246000fd5b611264919061232c565b868460ff166003811061128757634e487b7160e01b600052603260045260246000fd5b602002018181516112989190612314565b905250505b505b806112a9816123a8565b915050610fd2565b50806112c15760009150506114bc565b60006112d08560200151611551565b9050846040015151600214156113ac5784600001516001600160a01b0316630b4c7e4d3460405180604001604052808860006003811061132057634e487b7160e01b600052603260045260246000fd5b602002015181526020018860016003811061134b57634e487b7160e01b600052603260045260246000fd5b60200201518152508860a001516040518463ffffffff1660e01b8152600401611375929190611e8d565b6000604051808303818588803b15801561138e57600080fd5b505af11580156113a2573d6000803e3d6000fd5b505050505061149f565b84600001516001600160a01b0316634515cef3346040518060600160405280886000600381106113ec57634e487b7160e01b600052603260045260246000fd5b602002015181526020018860016003811061141757634e487b7160e01b600052603260045260246000fd5b602002015181526020018860026003811061144257634e487b7160e01b600052603260045260246000fd5b60200201518152508860a001516040518463ffffffff1660e01b815260040161146c929190611ec5565b6000604051808303818588803b15801561148557600080fd5b505af1158015611499573d6000803e3d6000fd5b50505050505b806114ad8660200151611551565b6114b7919061232c565b925050505b92915050565b6000611517826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115e99092919063ffffffff16565b805190915015610f9257808060200190518101906115359190611b07565b610f925760405162461bcd60e51b815260040161025890612054565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526000906001600160a01b038316906370a0823190611599903090600401611de1565b60206040518083038186803b1580156115b157600080fd5b505afa1580156115c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bc9190611d1f565b60606115f88484600085611602565b90505b9392505050565b6060824710156116245760405162461bcd60e51b815260040161025890611f89565b61162d856116c2565b6116495760405162461bcd60e51b815260040161025890611fe6565b600080866001600160a01b031685876040516116659190611dc5565b60006040518083038185875af1925050503d80600081146116a2576040519150601f19603f3d011682016040523d82523d6000602084013e6116a7565b606091505b50915091506116b78282866116c8565b979650505050505050565b3b151590565b606083156116d75750816115fb565b8251156116e75782518084602001fd5b8160405162461bcd60e51b81526004016102589190611f08565b60405180606001604052806003906020820280368337509192915050565b80356109ea816123f4565b600082601f83011261173a578081fd5b8135602061174f61174a836122f0565b6122c6565b828152818101908583018385028701840188101561176b578586fd5b855b85811015611792578135611780816123f4565b8452928401929084019060010161176d565b5090979650505050505050565b600082601f8301126117af578081fd5b813560206117bf61174a836122f0565b8281528181019085830160e0808602880185018910156117dd578687fd5b865b868110156118845781838b0312156117f5578788fd5b6040805183810181811067ffffffffffffffff82111715611818576118186123de565b82526118238561171f565b815261183088860161171f565b818901528482013591810191909152606080850135908201526080808501359082015260a0808501359082015260c09061186b828601611a3a565b91810191909152855293850193918101916001016117df565b509198975050505050505050565b600082601f8301126118a2578081fd5b813560206118b261174a836122f0565b82815281810190858301838502870184018810156118ce578586fd5b855b85811015611792578135845292840192908401906001016118d0565b80356109ea81612409565b600060c08284031215611908578081fd5b61191260c06122c6565b905061191d8261171f565b815261192b6020830161171f565b6020820152604082013567ffffffffffffffff8082111561194b57600080fd5b61195785838601611892565b6040840152606084013591508082111561197057600080fd5b5061197d8482850161172a565b6060830152506080820135608082015260a082013560a082015292915050565b600060a082840312156119ae578081fd5b60405160a0810181811067ffffffffffffffff821117156119d1576119d16123de565b60405290508082356119e2816123f4565b815260208301356119f2816123f4565b60208201526040830135600f81900b8114611a0c57600080fd5b6040820152611a1d6060840161171f565b6060820152611a2e608084016118ec565b60808201525092915050565b803560ff811681146109ea57600080fd5b600060208284031215611a5c578081fd5b81356115fb816123f4565b600080600060608486031215611a7b578182fd5b833567ffffffffffffffff80821115611a92578384fd5b611a9e8783880161172a565b94506020860135915080821115611ab3578384fd5b611abf8783880161172a565b93506040860135915080821115611ad4578283fd5b50611ae186828701611892565b9150509250925092565b600060208284031215611afc578081fd5b81356115fb81612409565b600060208284031215611b18578081fd5b81516115fb81612409565b600080600080848603610120811215611b3a578283fd5b60c0811215611b47578283fd5b5060405160c0810167ffffffffffffffff8282108183111715611b6c57611b6c6123de565b8160405287358352611b806020890161171f565b6020840152611b916040890161171f565b60408401526060880135606084015260808801356080840152611bb660a089016118ec565b60a084015291955060c08701359180831115611bd0578485fd5b611bdc89848a016118f7565b955060e0880135925080831115611bf1578485fd5b611bfd89848a016118f7565b9450610100880135925080831115611c13578384fd5b5050611c218782880161179f565b91505092959194509250565b600080600080848603610260811215611c44578283fd5b61010080821215611c53578384fd5b604051915080820167ffffffffffffffff8382108183111715611c7857611c786123de565b8160405288358452611c8c60208a0161171f565b602085015260408901356040850152611ca760608a0161171f565b60608501526080890135608085015260a089013560a085015260c089013560c0850152611cd660e08a016118ec565b60e0850152839750611cea8a848b0161199d565b9650611cfa8a6101a08b0161199d565b9550610240890135935080841115611d10578485fd5b505050611c218782880161179f565b600060208284031215611d30578081fd5b5051919050565b60008151808452611d4f816020860160208601612343565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6001600160a01b03169052565b6001600160a01b03808251168352602082015115156020840152806040830151166040840152506060810151151560608301525050565b60008251611dd7818460208701612343565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b03929092168252602082015260400190565b60608101818460005b6002811015611eb5578151835260209283019290910190600101611e96565b5050508260408301529392505050565b60808101818460005b6003811015611eed578151835260209283019290910190600101611ece565b5050508260608301529392505050565b901515815260200190565b6000602082526115fb6020830184611d37565b60208082526010908201527f53656e646572206e6f74206f776e657200000000000000000000000000000000604082015260600190565b60208082526015908201527f53656e646572206e6f7420417574686f72697a65640000000000000000000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526010908201527f496e636f7272656374206c656e67746800000000000000000000000000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252600f908201527f696e636f72726563742076616c75650000000000000000000000000000000000604082015260600190565b6020808252600f908201527f436f6e74726163742066726f7a656e0000000000000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526036908201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60408201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606082015260800190565b6020808252601b908201527f212832203e3d20616d6f756e74732e6c656e677468203c3d2033290000000000604082015260600190565b600060e08252855160e083015260208601516002811061221857634e487b7160e01b82526021600452602482fd5b6101008301526040860151612231610120840182611d81565b506060860151612245610140840182611d81565b50608086015161016083015260a086015160c061018084015261226c6101a0840182611d37565b91505061227c6020830186611d8e565b60a082019390935260c0015292915050565b90815260200190565b928352600f9190910b6020830152604082015260600190565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff811182821017156122e8576122e86123de565b604052919050565b600067ffffffffffffffff82111561230a5761230a6123de565b5060209081020190565b60008219821115612327576123276123c8565b500190565b60008282101561233e5761233e6123c8565b500390565b60005b8381101561235e578181015183820152602001612346565b838111156107725750506000910152565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156123a1576123a16123c8565b5060010190565b600060ff821660ff8114156123bf576123bf6123c8565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146105f557600080fd5b80151581146105f557600080fdfea2646970667358221220ee329718b5ed518d6347b60ef802912c68b409558419ae0eb51b1157692e0a4c64736f6c63430008000033";

type ZapSwapCurveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZapSwapCurveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZapSwapCurve__factory extends ContractFactory {
  constructor(...args: ZapSwapCurveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    __balancer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZapSwapCurve> {
    return super.deploy(__balancer, overrides || {}) as Promise<ZapSwapCurve>;
  }
  getDeployTransaction(
    __balancer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(__balancer, overrides || {});
  }
  attach(address: string): ZapSwapCurve {
    return super.attach(address) as ZapSwapCurve;
  }
  connect(signer: Signer): ZapSwapCurve__factory {
    return super.connect(signer) as ZapSwapCurve__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZapSwapCurveInterface {
    return new utils.Interface(_abi) as ZapSwapCurveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZapSwapCurve {
    return new Contract(address, _abi, signerOrProvider) as ZapSwapCurve;
  }
}
