/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ZapYearnShares,
  ZapYearnSharesInterface,
} from "../ZapYearnShares";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "__trancheFactory",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "__trancheBytecodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deprecate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_newState",
        type: "bool",
      },
    ],
    name: "setIsFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_underlying",
        type: "address",
      },
      {
        internalType: "contract IYearnVault",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_position",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_ptExpected",
        type: "uint256",
      },
    ],
    name: "zapSharesIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526002805460ff1916905534801561001a57600080fd5b50604051610d90380380610d9083398101604081905261003991610099565b600080546001600160a01b0319163390811790915561005790610072565b60609190911b6001600160601b03191660805260a0526100d1565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b600080604083850312156100ab578182fd5b82516001600160a01b03811681146100c1578283fd5b6020939093015192949293505050565b60805160601c60a051610c976100f9600039600061083b015260006108170152610c976000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806364eda74b11610076578063b6a5d7de1161005b578063b6a5d7de1461015a578063b91816111461016d578063fe9fbb8014610180576100be565b806364eda74b146101325780638da5cb5b14610145576100be565b806327c97fa5116100a757806327c97fa5146100e057806333eeb147146100f35780634939238614610111576100be565b80630fcc0c28146100c357806313af4035146100cd575b600080fd5b6100cb610193565b005b6100cb6100db3660046108f2565b6101f0565b6100cb6100ee3660046108f2565b610288565b6100fb610325565b6040516101089190610ad9565b60405180910390f35b61012461011f36600461094d565b61032e565b604051610108929190610c23565b6100cb610140366004610915565b610674565b61014d6106e4565b6040516101089190610a87565b6100cb6101683660046108f2565b610700565b6100fb61017b3660046108f2565b61075d565b6100fb61018e3660046108f2565b610772565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e490610ae4565b60405180910390fd5b33ff5b60005473ffffffffffffffffffffffffffffffffffffffff163314610241576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e490610ae4565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e490610ae4565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60025460ff1681565b600254600090819060ff1615610370576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e490610b89565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8816906323b872dd906103c690339030908b90600401610aa8565b602060405180830381600087803b1580156103e057600080fd5b505af11580156103f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104189190610931565b506040517fe63697c800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88169063e63697c8906104709089908890600090600401610bf7565b602060405180830381600087803b15801561048a57600080fd5b505af115801561049e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c291906109b3565b5060006104cf858761079d565b905060008973ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b815260040161050c9190610a87565b60206040518083038186803b15801561052457600080fd5b505afa158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c91906109b3565b90506000808373ffffffffffffffffffffffffffffffffffffffff166385f45c88336040518263ffffffff1660e01b815260040161059a9190610a87565b6040805180830381600087803b1580156105b357600080fd5b505af11580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb91906109cb565b9150915082811015610629576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e490610bc0565b86821015610663576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e490610b52565b909b909a5098505050505050505050565b61067d33610772565b6106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e490610b1b565b600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff163314610751576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e490610ae4565b61075a816108a0565b50565b60016020526000908152604090205460ff1681565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b60008083836040516020016107b39291906109ee565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905280516020918201209250600091610861917fff00000000000000000000000000000000000000000000000000000000000000917f00000000000000000000000000000000000000000000000000000000000000009186917f00000000000000000000000000000000000000000000000000000000000000009101610a23565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152919052805160209091012095945050505050565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b600060208284031215610903578081fd5b813561090e81610c31565b9392505050565b600060208284031215610926578081fd5b813561090e81610c53565b600060208284031215610942578081fd5b815161090e81610c53565b60008060008060008060c08789031215610965578182fd5b863561097081610c31565b9550602087013561098081610c31565b94506040870135935060608701359250608087013561099e81610c31565b8092505060a087013590509295509295509295565b6000602082840312156109c4578081fd5b5051919050565b600080604083850312156109dd578182fd5b505080516020909101519092909150565b60609290921b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000168252601482015260340190565b7fff0000000000000000000000000000000000000000000000000000000000000094909416845260609290921b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830152603582015260550190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b901515815260200190565b60208082526010908201527f53656e646572206e6f74206f776e657200000000000000000000000000000000604082015260600190565b60208082526015908201527f53656e646572206e6f7420417574686f72697a65640000000000000000000000604082015260600190565b60208082526014908201527f4e6f7420656e6f756768205054206d696e746564000000000000000000000000604082015260600190565b6020808252600f908201527f436f6e74726163742066726f7a656e0000000000000000000000000000000000604082015260600190565b60208082526014908201527f4e6f7420656e6f756768205954206d696e746564000000000000000000000000604082015260600190565b92835273ffffffffffffffffffffffffffffffffffffffff919091166020830152604082015260600190565b918252602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff8116811461075a57600080fd5b801515811461075a57600080fdfea26469706673582212201cc8dd5864fc6df52f7ed51a8996f19b0ca045d9278e7e6c01eb3850f4f4eb9564736f6c63430008000033";

type ZapYearnSharesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZapYearnSharesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZapYearnShares__factory extends ContractFactory {
  constructor(...args: ZapYearnSharesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    __trancheFactory: string,
    __trancheBytecodeHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZapYearnShares> {
    return super.deploy(
      __trancheFactory,
      __trancheBytecodeHash,
      overrides || {}
    ) as Promise<ZapYearnShares>;
  }
  getDeployTransaction(
    __trancheFactory: string,
    __trancheBytecodeHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __trancheFactory,
      __trancheBytecodeHash,
      overrides || {}
    );
  }
  attach(address: string): ZapYearnShares {
    return super.attach(address) as ZapYearnShares;
  }
  connect(signer: Signer): ZapYearnShares__factory {
    return super.connect(signer) as ZapYearnShares__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZapYearnSharesInterface {
    return new utils.Interface(_abi) as ZapYearnSharesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZapYearnShares {
    return new Contract(address, _abi, signerOrProvider) as ZapYearnShares;
  }
}
