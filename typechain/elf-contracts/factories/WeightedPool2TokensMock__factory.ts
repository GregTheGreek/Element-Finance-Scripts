/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WeightedPool2TokensMock,
  WeightedPool2TokensMockInterface,
  NewPoolParamsStruct,
} from "../WeightedPool2TokensMock";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IVault",
            name: "vault",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "contract IERC20",
            name: "token0",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "normalizedWeight0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalizedWeight1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFeePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pauseWindowDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bufferPeriodDuration",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "oracleEnabled",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct WeightedPool2Tokens.NewPoolParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "OracleEnabledChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newSample",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sampleIndex",
        type: "uint256",
      },
    ],
    name: "PriceDataProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "normalizedWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "bptTotalSupplyLn",
        type: "int256",
      },
    ],
    name: "calcLogBPTPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "normalizedWeightA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalizedWeightB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceB",
        type: "uint256",
      },
    ],
    name: "calcLogSpotPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sample",
        type: "bytes32",
      },
    ],
    name: "decode",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "logPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logInvariant",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogInvariant",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PoolPriceOracleMock.Sample",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "logPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logInvariant",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogInvariant",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PoolPriceOracleMock.Sample",
        name: "sample",
        type: "tuple",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "dates",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "findNearestSamplesTimestamp",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "prev",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "next",
            type: "uint256",
          },
        ],
        internalType: "struct PoolPriceOracleMock.BinarySearchResult[]",
        name: "results",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
    ],
    name: "fromLowResLog",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInvariant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLargestSafeQueryWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastInvariant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPriceOracle.Variable",
        name: "variable",
        type: "uint8",
      },
    ],
    name: "getLatest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMiscData",
    outputs: [
      {
        internalType: "int256",
        name: "logInvariant",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logTotalSupply",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "oracleSampleCreationTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oracleIndex",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "oracleEnabled",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNormalizedWeights",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPriceOracle.Variable",
        name: "variable",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "currentIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getPastAccumulator",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IPriceOracle.Variable",
            name: "variable",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "ago",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceOracle.OracleAccumulatorQuery[]",
        name: "queries",
        type: "tuple[]",
      },
    ],
    name: "getPastAccumulators",
    outputs: [
      {
        internalType: "int256[]",
        name: "results",
        type: "int256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPausedState",
    outputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pauseWindowEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSample",
    outputs: [
      {
        internalType: "int256",
        name: "logPairPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "accLogPairPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logBptPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "accLogBptPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logInvariant",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "accLogInvariant",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IPriceOracle.Variable",
            name: "variable",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "secs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ago",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceOracle.OracleAverageQuery[]",
        name: "queries",
        type: "tuple[]",
      },
    ],
    name: "getTimeWeightedAverage",
    outputs: [
      {
        internalType: "uint256[]",
        name: "results",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSamples",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "logInvariant",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logTotalSupply",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "oracleSampleCreationTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleIndex",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "oracleEnabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "swapFeePercentage",
            type: "uint256",
          },
        ],
        internalType: "struct WeightedPool2TokensMock.MiscData",
        name: "miscData",
        type: "tuple",
      },
    ],
    name: "mockMiscData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockOracleDisabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "mockOracleIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "logPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logInvariant",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogInvariant",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PoolPriceOracleMock.Sample",
        name: "sample",
        type: "tuple",
      },
    ],
    name: "mockSample",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "indexes",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "logPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logInvariant",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogInvariant",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PoolPriceOracleMock.Sample[]",
        name: "samples",
        type: "tuple[]",
      },
    ],
    name: "mockSamples",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "elapsed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentIndex",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "logPairPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logBptPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logInvariant",
        type: "int256",
      },
    ],
    name: "processPriceData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "toLowResLog",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sample",
        type: "bytes32",
      },
      {
        internalType: "int256",
        name: "logPairPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logBptPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logInvariant",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "update",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "logPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logInvariant",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogInvariant",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PoolPriceOracleMock.Sample",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6102a06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b5060405162006626380380620066268339810160408190526200005a916200080a565b61010081810151610120830151602080850151604080870151815180830190925260018252603160f81b8285019081526101608901513360805260601b6001600160601b03191660a052835194840194852060c052915190912060e0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f909552805186959192620000f091600391906200069d565b508051620001069060049060208401906200069d565b506200011e9150506276a70083111561019462000408565b6200013262278d0082111561019562000408565b4290910161014081815291016101605281015162000150906200041d565b60e0810151620001609062000479565b80516040516309b2760f60e01b81526000916001600160a01b0316906309b2760f90620001939060029060040162000a10565b602060405180830381600087803b158015620001ae57600080fd5b505af1158015620001c3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e99190620007f1565b6040805160028082526060808301845293945090916020830190803683370190505090508260600151816000815181106200022057fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508260800151816001815181106200025357fe5b6001600160a01b0392831660209182029290920101528351166366a9c7d2838360026040519080825280602002602001820160405280156200029f578160200160208202803683370190505b506040518463ffffffff1660e01b8152600401620002c09392919062000974565b600060405180830381600087803b158015620002db57600080fd5b505af1158015620002f0573d6000803e3d6000fd5b505084516001600160601b0319606091821b8116610180526101a08690528187018051831b82166101c052608088015190921b166101e052516200033792509050620004f7565b6102605260808301516200034b90620004f7565b6102805260a08301516200036c90662386f26fc10000111561012e62000408565b6200038e662386f26fc100008460c00151101561012e6200040860201b60201c565b6000620003b28460c001518560a001516200059960201b620018711790919060201c565b9050620003cc670de0b6b3a7640000821461013462000408565b60a0840180516102005260c085018051610220525190511015620003f2576001620003f5565b60005b60ff16610240525062000a619350505050565b8162000419576200041981620005b6565b5050565b62000439816008546200060960201b620018831790919060201c565b6008556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead1906200046e90839062000969565b60405180910390a150565b6200048e64e8d4a5100082101560cb62000408565b620004a667016345785d8a000082111560ca62000408565b620004c2816008546200062860201b620018911790919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906200046e90839062000a25565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200053457600080fd5b505afa15801562000549573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200056f919062000946565b60ff16905060006200058e6012836200064760201b6200189f1760201c565b600a0a949350505050565b6000828201620005ad848210158362000408565b90505b92915050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000620005ad826055856200065f60201b620018b5179092919060201c565b6000620005ad826056856200068860201b620018dc179092919060201c565b60006200065983831115600162000408565b50900390565b60006001821b1984168284620006775760006200067a565b60015b60ff16901b17949350505050565b6001600160401b03811b1992909216911b1790565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006e057805160ff191683800117855562000710565b8280016001018555821562000710579182015b8281111562000710578251825591602001919060010190620006f3565b506200071e92915062000722565b5090565b5b808211156200071e576000815560010162000723565b80516001600160a01b0381168114620005b057600080fd5b80518015158114620005b057600080fd5b600082601f83011262000773578081fd5b81516001600160401b0381111562000789578182fd5b60206200079f601f8301601f1916820162000a2e565b92508183528481838601011115620007b657600080fd5b60005b82811015620007d6578481018201518482018301528101620007b9565b82811115620007e85760008284860101525b50505092915050565b60006020828403121562000803578081fd5b5051919050565b6000602082840312156200081c578081fd5b81516001600160401b038082111562000833578283fd5b81840191506101808083870312156200084a578384fd5b620008558162000a2e565b905062000863868462000739565b815260208301518281111562000877578485fd5b620008858782860162000762565b6020830152506040830151828111156200089d578485fd5b620008ab8782860162000762565b604083015250620008c0866060850162000739565b6060820152620008d4866080850162000739565b608082015260a0838101519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101409150620009208683850162000751565b828201526101609150620009378683850162000739565b91810191909152949350505050565b60006020828403121562000958578081fd5b815160ff81168114620005ad578182fd5b901515815260200190565b60006060820185835260206060818501528186518084526080860191508288019350845b81811015620009c057620009ad855162000a55565b8352938301939183019160010162000998565b505084810360408601528551808252908201925081860190845b8181101562000a0257620009ef835162000a55565b85529383019391830191600101620009da565b509298975050505050505050565b602081016003831062000a1f57fe5b91905290565b90815260200190565b6040518181016001600160401b038111828210171562000a4d57600080fd5b604052919050565b6001600160a01b031690565b60805160a05160601c60c05160e051610100516101205161014051610160516101805160601c6101a0516101c05160601c6101e05160601c6102005161022051610240516102605161028051615aed62000b39600039806125a05250806125c75250806135d1528061360552806136415250806125f4528061269052508061261b528061266e52806126be52505080611001525080610af0525080610f31525080611a8c525080611a6852508061149a525080611dc2525080611e04525080611de3525080610f0d525080610e985250615aed6000f3fe608060405234801561001057600080fd5b506004361061036d5760003560e01c80637ecebe00116101d3578063bf33866611610104578063d5c096c4116100a2578063e5fe5f3c1161007c578063e5fe5f3c14610745578063f89f27ed14610758578063ff7b6f1e14610760578063ffd088eb146107735761036d565b8063d5c096c41461070c578063d73dd6231461071f578063dd62ed3e146107325761036d565b8063c519a075116100de578063c519a075146106b3578063d4376804146106c6578063d505accf146106e6578063d5125db6146106f95761036d565b8063bf33866614610678578063c0ff1a151461068b578063c3748ef1146106935761036d565b80639d2c110c11610171578063abb9d0d51161014b578063abb9d0d514610637578063b10be7391461064a578063b48b5b401461065d578063be7a6d1e146106655761036d565b80639d2c110c14610609578063a9059cbb1461061c578063aaabadc51461062f5761036d565b8063893d20e8116101ad578063893d20e8146105dc5780638d928af8146105f157806395d89b41146105f95780639b02cdde146106015761036d565b80637ecebe00146105a3578063851c1bb3146105b657806387ec6817146105c95761036d565b806338e9922e116102ad57806360d1507c1161024b57806368a54df21161022557806368a54df21461053c5780636b8432391461054f57806370a082311461056f57806374f3b009146105825761036d565b806360d1507c146104fb5780636618846314610521578063679aefce146105345761036d565b80634a6b0b15116102875780634a6b0b15146104a557806355c67628146104bf57806357aad013146104c75780636028bfd4146104da5761036d565b806338e9922e1461047757806338fff2d01461048a5780633d48f8c1146104925761036d565b806323b872dd1161031a578063292c914a116102f4578063292c914a1461044a5780633081bfee14610452578063313ce5671461045a5780633644e5151461046f5761036d565b806323b872dd14610411578063259efd1614610424578063264959fb146104375761036d565b806318160ddd1161034b57806318160ddd146103c55780631c0de051146103da5780631dccd830146103f15761036d565b806306fdde0314610372578063095ea7b31461039057806316c38b3c146103b0575b600080fd5b61037a61077b565b604051610387919061594d565b60405180910390f35b6103a361039e366004614ded565b61082f565b60405161038791906157f3565b6103c36103be366004615166565b610846565b005b6103cd61085a565b6040516103879190615826565b6103e2610860565b6040516103879392919061580e565b6104046103ff366004614fa3565b610889565b60405161038791906157bb565b6103a361041f366004614d38565b610992565b6103c36104323660046155ce565b610a4d565b6103cd610445366004615420565b610a6c565b6103c3610a83565b6103c3610ab7565b610462610ac1565b6040516103879190615a25565b6103cd610ac6565b6103c361048536600461519e565b610ad5565b6103cd610aee565b6103cd6104a03660046154b7565b610b12565b6104ad610b47565b60405161038796959493929190615923565b6103cd610ba2565b6103cd6104d536600461519e565b610baf565b6104ed6104e83660046151b6565b610bba565b604051610387929190615a0c565b61050e61050936600461519e565b610beb565b60405161038797969594939291906158f3565b6103a361052f366004614ded565b610c34565b6103cd610c9b565b6103c361054a36600461519e565b610cc0565b61056261055d366004614ee4565b610cd3565b6040516103879190615728565b6103cd61057d366004614ce4565b610d85565b6105956105903660046151b6565b610dad565b6040516103879291906157ce565b6103cd6105b1366004614ce4565b610e6c565b6103cd6105c4366004615293565b610e94565b6104ed6105d73660046151b6565b610ee6565b6105e4610f0b565b6040516103879190615707565b6105e4610f2f565b61037a610f53565b6103cd610fd2565b6103cd6106173660046154d2565b610fd8565b6103a361062a366004614ded565b6111a1565b6105e46111ae565b6103cd61064536600461519e565b6111b8565b6103cd610658366004615404565b6111c3565b6103cd6111e5565b6103cd6106733660046155fb565b6111eb565b6103c3610686366004615454565b6111f8565b6103cd611201565b6106a66106a136600461519e565b6112e8565b60405161038791906159be565b6103cd6106c1366004615626565b61136d565b6106d96106d4366004615123565b611384565b604051610387919061576c565b6103c36106f4366004614d78565b611458565b6103c3610707366004615259565b611600565b61059561071a3660046151b6565b61165a565b6103a361072d366004614ded565b61177a565b6103cd610740366004614d00565b6117bd565b6103c361075336600461505e565b6117f5565b61040461183e565b6106a661076e366004615259565b611848565b6103cd61186a565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108255780601f106107fa57610100808354040283529160200191610825565b820191906000526020600020905b81548152906001019060200180831161080857829003601f168201915b5050505050905090565b600061083c3384846118f2565b5060015b92915050565b61084e611967565b610857816119ad565b50565b60025490565b600080600061086d611a49565b159250610878611a66565b9150610882611a8a565b9050909192565b6060815167ffffffffffffffff811180156108a357600080fd5b506040519080825280602002602001820160405280156108cd578160200160208202803683370190505b50905060006108dd600854611aae565b90506108e7614a79565b60005b845181101561098a578481815181106108ff57fe5b6020026020010151915061091d82602001516000141561013c611abb565b60006109388360000151858560200151866040015101611acd565b9050600061094f8460000151868660400151611acd565b905061096984602001518383038161096357fe5b05611c13565b86848151811061097557fe5b602090810291909101015250506001016108ea565b505050919050565b73ffffffffffffffffffffffffffffffffffffffff8316600081815260016020908152604080832033808552925282205491926109dd9114806109d55750838210155b610197611abb565b6109e8858585611c26565b3373ffffffffffffffffffffffffffffffffffffffff861614801590610a2e57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114155b15610a4057610a4085338584036118f2565b60019150505b9392505050565b610a5681610b12565b6000928352600760205260409092209190915550565b6000610a7b8484844203611acd565b949350505050565b610a8b611d29565b610a93611967565b610a9d6001611d3c565b6000610aa761085a565b1115610ab557610ab5611d7c565b565b610ab56000611d3c565b601290565b6000610ad0611dbe565b905090565b610add611967565b610ae5611d29565b61085781611e5b565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610b3f826000015183602001518460400151856060015186608001518760a001518860c00151611ec4565b90505b919050565b60008060008060008060006008549050610b6081611f24565b9650610b6b81611f30565b9550610b7681611f3d565b9450610b8181611aae565b9350610b8c81611f4a565b9250610b9781611f57565b915050909192939495565b6000610ad0600854611f57565b6000610b3f82611f64565b60006060610bca86516002611fa8565b610bdf89898989898989611fb561206f6120ed565b97509795505050505050565b6000806000806000806000610c06610400891061013b611abb565b6000610c11896122a4565b9050610c1c816122b6565b959f949e50929c50909a509850965090945092505050565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054808310610c7d57610c78338560006118f2565b610c91565b610c913385610c8c848761189f565b6118f2565b5060019392505050565b6000610ad0610ca861085a565b610cba610cb3611201565b6002612319565b9061233d565b600854610ccd908261238e565b60085550565b6060815167ffffffffffffffff81118015610ced57600080fd5b50604051908082528060200260200182016040528015610d17578160200160208202803683370190505b5090506000610d27600854611aae565b9050610d31614a9b565b60005b845181101561098a57848181518110610d4957fe5b60200260200101519150610d668260000151848460200151611acd565b848281518110610d7257fe5b6020908102919091010152600101610d34565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60608088610df1610dbc610f2f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161460cd611abb565b610e06610dfc610aee565b82146101f4611abb565b610e0f8761239c565b6000606080610e238d8d8d8d8d8d8d611fb5565b925092509250610e338c846123fe565b610e3c8261206f565b610e458161206f565b610e4d611a49565b15610e5a57610e5a611d7c565b909c909b509950505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205490565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610ec9929190615691565b604051602081830303815290604052805190602001209050919050565b60006060610ef686516002611fa8565b610bdf898989898989896124b86125396120ed565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108255780601f106107fa57610100808354040283529160200191610825565b60095490565b6000610fe2611d29565b8360800151610ff2610dbc610f2f565b610ffd610dfc610aee565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff16149050600061105f82612597565b9050600061106d8315612597565b9050600061107a846125eb565b9050600061108885156125eb565b9050611094898561263f565b98506110a0888461263f565b97506110c98a60a00151866110b557896110b7565b8a5b876110c2578b6110c4565b8a5b61264b565b60008a5160018111156110d857fe5b14156111465760006110f66110eb610ba2565b60608d015190612751565b9050611118611112828d6060015161189f90919063ffffffff16565b8661263f565b60608c0152600061112c8c8c8c87876127b3565b905061113881866127c6565b985050505050505050611199565b6111548a606001518461263f565b60608b015260006111688b8b8b86866127d2565b905061117481866127e5565b9050611190611189611184610ba2565b6127f1565b8290612817565b97505050505050505b509392505050565b600061083c338484611c26565b6000610ad0612859565b6000610b3f82611c13565b6000806111da836111d5600854611aae565b6128e0565b9050610a4681611c13565b61040090565b6000610a7b84848461290f565b610ccd8161292b565b6000606061120d610f2f565b73ffffffffffffffffffffffffffffffffffffffff1663f94d4668611230610aee565b6040518263ffffffff1660e01b815260040161124c9190615826565b60006040518083038186803b15801561126457600080fd5b505afa158015611278573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526112be9190810190614e18565b509150506112cb8161239c565b60606112d56129b8565b90506112e18183612a26565b9250505090565b6112f0614ab2565b6040805160e0810190915280611307846000612a98565b8152602001611317846000612ae3565b8152602001611327846001612a98565b8152602001611337846001612ae3565b8152602001611347846002612a98565b8152602001611357846002612ae3565b815260200161136584612b27565b905292915050565b600061137b85858585612b33565b95945050505050565b6060825167ffffffffffffffff8111801561139e57600080fd5b506040519080825280602002602001820160405280156113d857816020015b6113c5614aef565b8152602001906001900390816113bd5790505b50905060005b8351811015611451576000806114078684815181106113f957fe5b602002602001015186612b5e565b91509150604051806040016040528061141f84612b27565b815260200161142d83612b27565b81525084848151811061143c57fe5b602090810291909101015250506001016113de565b5092915050565b6114668442111560d1611abb565b73ffffffffffffffffffffffffffffffffffffffff871660009081526005602090815260408083205490519092916114ca917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d910161585b565b60405160208183030381529060405280519060200120905060006114ed82612c11565b905060006001828888886040516000815260200160405260405161151494939291906158d5565b6020604051602081039080840390855afa158015611536573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191506115bd905073ffffffffffffffffffffffffffffffffffffffff8216158015906115b557508b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6101f8611abb565b73ffffffffffffffffffffffffffffffffffffffff8b1660009081526005602052604090206001850190556115f38b8b8b6118f2565b5050505050505050505050565b4285900360006116138287878787612c2d565b90507fa7f3e984c65d79d0fa58244dddb6522f661c9dea23fe4940801cbfe08810750686821415826040516116499291906157fe565b60405180910390a150505050505050565b60608088611669610dbc610f2f565b611674610dfc610aee565b61167c611d29565b600061168661085a565b6116f6576116968b8b8b88612c84565b945090506116ab620f424082101560cc611abb565b6116b96000620f4240612d0d565b6116c889620f42408303612d0d565b6116d184612539565b6040805160028082526060820183529091602083019080368337019050509250611764565b6116ff8861239c565b611732878960008151811061171057fe5b60200260200101518a60018151811061172557fe5b602002602001015161264b565b6117418b8b8b8b8b8b8b6124b8565b909550935090506117528982612d0d565b61175b84612539565b6117648361206f565b61176c611d7c565b505097509795505050505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161083c918590610c8c9086611871565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60005b82518110156118395761183183828151811061181057fe5b602002602001015183838151811061182457fe5b6020026020010151610a4d565b6001016117f8565b505050565b6060610ad06129b8565b611850614ab2565b6118606106a18787878787612dca565b9695505050505050565b6201de2090565b6000828201610a468482101583611abb565b6000610a46838360556118b5565b6000610a46838360566118dc565b60006118af838311156001611abb565b50900390565b60006001821b19841682846118cb5760006118ce565b60015b60ff16901b17949350505050565b67ffffffffffffffff811b1992909216911b1790565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061195a908590615826565b60405180910390a3505050565b60006119966000357fffffffff0000000000000000000000000000000000000000000000000000000016610e94565b90506108576119a58233612e2a565b610191611abb565b80156119cd576119c86119be611a66565b4210610193611abb565b6119e2565b6119e26119d8611a8a565b42106101a9611abb565b600680547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490611a3e9083906157f3565b60405180910390a150565b6000611a53611a8a565b421180610ad057505060065460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610b3f82604b612f47565b81611ac957611ac981612f4f565b5050565b6000611ade82421015610138611abb565b428290036000611aed856122a4565b90506000611afa82612b27565b9050611b0b60008211610139611abb565b828111611b375780830380611b20848a612a98565b02611b2b848a612ae3565b01945050505050610a46565b6000611b4287612fbc565b90506000611b4f826122a4565b90506000611b5c82612b27565b9050611b6d60008211610139611abb565b611b7c8682111561013a611abb565b5050600080611b8b8684612b5e565b915091506000611b9a83612b27565b611ba383612b27565b0390508015611bfb576000611bb8848d612ae3565b611bc2848e612ae3565b0390506000611bd085612b27565b890390508281830281611bdf57fe5b05611bea868f612ae3565b019950505050505050505050610a46565b611c05838c612ae3565b975050505050505050610a46565b6000610b3f655af3107a40008302612fc9565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054611c5b82821015610196611abb565b611c7f73ffffffffffffffffffffffffffffffffffffffff84161515610199611abb565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681522054611cbc9083611871565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526020819052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611d1b908690615826565b60405180910390a350505050565b610ab5611d34611a49565b610192611abb565b600854611d499082611883565b6008556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead190611a3e9083906157f3565b600854611d8881611f4a565b1561085757611da2611d9b600954611f64565b8290613499565b9050610ccd611db7611db261085a565b611f64565b82906134a6565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611e2b6134b4565b30604051602001611e4095949392919061589c565b60405160208183030381529060405280519060200120905090565b611e6e64e8d4a5100082101560cb611abb565b611e8467016345785d8a000082111560ca611abb565b600854611e919082611891565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90611a3e908390615826565b6000611ed082826134b8565b611edb84601f6134bc565b611ee68660546134cd565b611ef188606a6134bc565b611efc8a609f6134cd565b611f078c60b56134bc565b611f128e60ea6134cd565b17171717171798975050505050505050565b6000610b3f82826134da565b6000610b3f8260166134da565b6000610b3f82602c61351d565b6000610b3f826055613527565b6000610b3f826056613531565b600080611f708361353f565b9050655af3107a400060008213611f8f57652d79883d20008203611f99565b652d79883d200082015b81611fa057fe5b059392505050565b611ac98183146067611abb565b60006060806060611fc46129b8565b9050611fce611a49565b1561201657611fe4878960008151811061171057fe5b6000611ff0828a612a26565b90506120018983600954848b61359b565b9250612010898461189f61367f565b50612037565b60408051600280825260608201835290916020830190803683370190505091505b612042888287613711565b9094509250612054888461189f61367f565b61205e8189612a26565b600955509750975097945050505050565b6120968160008151811061207f57fe5b60200260200101516120916001612597565b61377e565b816000815181106120a357fe5b6020026020010181815250506120d1816001815181106120bf57fe5b60200260200101516120916000612597565b816001815181106120de57fe5b60200260200101818152505050565b3330146121e95760003073ffffffffffffffffffffffffffffffffffffffff1660003660405161211e9291906156c1565b6000604051808303816000865af19150503d806000811461215b576040519150601f19603f3d011682016040523d82523d6000602084013e612160565b606091505b50509050806000811461216f57fe5b60046000803e6000517fffffffff00000000000000000000000000000000000000000000000000000000167f43adbafb0000000000000000000000000000000000000000000000000000000081146121cb573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b6121f28661239c565b600060606122098b8b8b8b8b8b8b8b63ffffffff16565b509150915061221b818463ffffffff16565b80517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082018390526343adbafb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08301526020027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc82016044820181fd5b505050505050505050565b60009081526007602052604090205490565b60008060008060008060006122ca8861379e565b96506122d5886137ab565b95506122e0886137b8565b94506122eb886137c5565b93506122f6886137d2565b9250612301886137df565b915061230c88612b27565b9050919395979092949650565b6000828202610a4684158061233657508385838161233357fe5b04145b6003611abb565b600061234c8215156004611abb565b8261235957506000610840565b670de0b6b3a76400008381029061237c9085838161237357fe5b04146005611abb565b82818161238557fe5b04915050610840565b6000610a468383604b6137ec565b6123c3816000815181106123ac57fe5b60200260200101516123be6001612597565b612319565b816000815181106123d057fe5b6020026020010181815250506120d1816001815181106123ec57fe5b60200260200101516123be6000612597565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205461243382821015610196611abb565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020828203905560025461246a908361189f565b60025560405160009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061195a908690615826565b600060608060606124c76129b8565b905060006124d5828a612a26565b905060606124e88a84600954858c61359b565b90506124f78a8261189f61367f565b600060606125068c868b6137fc565b915091506125178c8261187161367f565b612521858d612a26565b600955909e909d50909b509950505050505050505050565b6125608160008151811061254957fe5b602002602001015161255b6001612597565b613856565b8160008151811061256d57fe5b6020026020010181815250506120d18160018151811061258957fe5b602002602001015161255b60005b6000816125c4577f0000000000000000000000000000000000000000000000000000000000000000610b3f565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b600081612618577f0000000000000000000000000000000000000000000000000000000000000000610b3f565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b6000610a468383612319565b60085461265781611f4a565b801561266257508343115b1561274b5760006126b57f0000000000000000000000000000000000000000000000000000000000000000857f000000000000000000000000000000000000000000000000000000000000000086612b33565b905060006126ec7f0000000000000000000000000000000000000000000000000000000000000000866126e786611f30565b61290f565b905060006126f984611aae565b9050600061270685611f3d565b9050600061271f8284878761271a8b611f24565b612c2d565b905080831461229957612732868261238e565b955061273e8642613889565b6008819055955050505050505b50505050565b600082820261276b84158061233657508385838161233357fe5b8061277a576000915050610840565b670de0b6b3a76400007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82015b04600101915050610840565b6000611860858486858a60600151613897565b6000610a46838361377e565b6000611860858486858a60600151613904565b6000610a468383613856565b6000670de0b6b3a76400008210612809576000610b3f565b50670de0b6b3a76400000390565b60006128268215156004611abb565b8261283357506000610840565b670de0b6b3a76400008381029061284d9085838161237357fe5b8260018203816127a757fe5b6000612863610f2f565b73ffffffffffffffffffffffffffffffffffffffff1663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156128a857600080fd5b505afa1580156128bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad091906152d3565b6000806128ec836122a4565b905061290560006128fc83612b27565b11610139611abb565b610a7b8185612a98565b60008061291f611db28587612817565b92909203949350505050565b60006129448260a001518261189190919063ffffffff16565b905061295d82608001518261188390919063ffffffff16565b905061297682606001518261238e90919063ffffffff16565b905061298f82604001518261388990919063ffffffff16565b90506129a88260200151826134a690919063ffffffff16565b8251909150610b3f908290613499565b6040805160028082526060808301845292839291906020830190803683370190505090506129e660016125eb565b816000815181106129f357fe5b602002602001018181525050612a0960006125eb565b81600181518110612a1657fe5b6020908102919091010152905090565b670de0b6b3a764000060005b8351811015612a8857612a7e612a77858381518110612a4d57fe5b6020026020010151858481518110612a6157fe5b602002602001015161397a90919063ffffffff16565b83906139c9565b9150600101612a32565b5061084060008211610137611abb565b600080826002811115612aa757fe5b1415612abd57612ab68361379e565b9050610840565b6001826002811115612acb57fe5b1415612ada57612ab6836137b8565b612ab6836137d2565b600080826002811115612af257fe5b1415612b0157612ab6836137ab565b6001826002811115612b0f57fe5b1415612b1e57612ab6836137c5565b612ab6836137df565b6000610b3f828261351d565b600080612b53612b438486612817565b612b4d8789612817565b90612817565b905061186081611f64565b600080806103ff8180805b838511612bd557600285850104612b80818a6139f5565b9350612b8b846122a4565b9250612b9683612b27565b915089821015612bab57806001019550612bcf565b89821115612bbe57600181039450612bcf565b828397509750505050505050612c0a565b50612b69565b888110612bf357612bed612be884613a06565b6122a4565b82612c00565b81612c00612be885612fbc565b9650965050505050505b9250929050565b6000612c1b611dbe565b82604051602001610ec99291906156d1565b600080612c4985858542612c408b6122a4565b93929190612dca565b9050607842889003101580612c5e5786612c67565b612c6787612fbc565b600081815260076020526040902092909255509695505050505050565b600060606000612c9384613a13565b9050612cae6000826002811115612ca657fe5b1460ce611abb565b6060612cb985613a29565b9050612cc781516002611fa8565b612cd08161239c565b6060612cda6129b8565b90506000612ce88284612a26565b90506000612cf7826002612319565b6009929092555099919850909650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054612d3d9082611871565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902055600254612d709082611871565b60025560405173ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612dbe908590615826565b60405180910390a35050565b600080612dd687612b27565b830390506000818702612de8896137ab565b0190506000828702612df98a6137c5565b0190506000838702612e0a8b6137df565b019050612e1c89848a858b868c611ec4565b9a9950505050505050505050565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612e49610f0b565b73ffffffffffffffffffffffffffffffffffffffff1614158015612e715750612e7183613a3f565b15612eb357612e7e610f0b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16149050610840565b612ebb612859565b73ffffffffffffffffffffffffffffffffffffffff16639be2a8848484306040518463ffffffff1660e01b8152600401612ef79392919061582f565b60206040518083038186803b158015612f0f57600080fd5b505afa158015612f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab69190615182565b1c6103ff1690565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000610b3f8260016139f5565b600061300e7ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc00008312158015613007575068070c1cc73b00c800008313155b6009611abb565b60008212156130425761302382600003612fc9565b6ec097ce7bc90715b34b9f10000000008161303a57fe5b059050610b42565b60006806f05b59d3b2000000831261309857507ffffffffffffffffffffffffffffffffffffffffffffffff90fa4a62c4e00000090910190770195e54c5dd42177f53a27172fa9ec6302628270000000006130e4565b6803782dace9d900000083126130e057507ffffffffffffffffffffffffffffffffffffffffffffffffc87d2531627000000909101906b1425982cf597cd205cef73806130e4565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac62000000841261314a577fffffffffffffffffffffffffffffffffffffffffffffff5287143a539e0000009093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d631000000841261319c577fffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf0000009093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b1880000084126131ec577fffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e78000009093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c400000841261323c577fffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c000009093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac6200000841261328b577ffffffffffffffffffffffffffffffffffffffffffffffff5287143a539e000009093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d6310000084126132da577ffffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf000009093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b18800008412613329577ffffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e7800009093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c400008412613378577ffffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c00009093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b6000610a46838383613a72565b6000610a4683836016613a72565b4690565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b600082821c623fffff16621fffff81136134f45780610a7b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00000179392505050565b1c637fffffff1690565b1c60019081161490565b1c67ffffffffffffffff1690565b600061354f600083136064611abb565b670c7d713b49da00008213801561356d5750670f43fc2c04ee000082125b1561358b57670de0b6b3a764000061358483613a89565b8161303a57fe5b61359482613bc0565b9050610b42565b604080516002808252606080830184529283929190602083019080368337019050509050826135cb57905061137b565b61363e877f0000000000000000000000000000000000000000000000000000000000000000815181106135fa57fe5b6020026020010151877f00000000000000000000000000000000000000000000000000000000000000008151811061362e57fe5b6020026020010151878787613f60565b817f00000000000000000000000000000000000000000000000000000000000000008151811061366a57fe5b60209081029190910101529695505050505050565b6136b58360008151811061368f57fe5b6020026020010151836000815181106136a457fe5b60200260200101518363ffffffff16565b836000815181106136c257fe5b6020026020010181815250506136f3836001815181106136de57fe5b6020026020010151836001815181106136a457fe5b8360018151811061370057fe5b602002602001018181525050505050565b60006060600061372084613a13565b9050600081600281111561373057fe5b141561374b57613741868686613fd8565b9250925050613776565b600181600281111561375957fe5b1415613769576137418685614088565b6137418686866140ba565b505b935093915050565b600061378d8215156004611abb565b81838161379657fe5b049392505050565b6000610b3f8260ea6134da565b6000610b3f8260b5614126565b6000610b3f82609f6134da565b6000610b3f82606a614126565b6000610b3f8260546134da565b6000610b3f82601f614126565b6103ff811b1992909216911b1790565b60006060600061380b84613a13565b9050600181600281111561381b57fe5b141561382c57613741868686614171565b600281600281111561383a57fe5b141561384b576137418686866141c7565b613774610136612f4f565b60006138658215156004611abb565b8261387257506000610840565b81600184038161387e57fe5b046001019050610840565b6000610a468383602c61424a565b60006138b96138ae87670429d069189e00006139c9565b831115610130611abb565b60006138c58784611871565b905060006138d38883612817565b905060006138e1888761233d565b905060006138ef838361425c565b9050612e1c6138fd826127f1565b89906139c9565b600061392661391b85670429d069189e00006139c9565b831115610131611abb565b600061393c613935868561189f565b8690612817565b9050600061394a8588612817565b90506000613958838361425c565b9050600061396e82670de0b6b3a764000061189f565b9050612e1c8a82612751565b6000806139878484614288565b905060006139a161399a83612710612751565b6001611871565b9050808210156139b657600092505050610840565b6139c0828261189f565b92505050610840565b60008282026139e384158061233657508385838161233357fe5b670de0b6b3a764000090049392505050565b60006104008383015b069392505050565b6000610b3f8260016143bb565b600081806020019051810190610b3f91906152ef565b606081806020019051810190610a4691906153b5565b6000613a6a7f38e9922e00000000000000000000000000000000000000000000000000000000610e94565b909114919050565b623fffff828116821b90821b198416179392505050565b670de0b6b3a7640000026000806ec097ce7bc90715b34b9f1000000000808401907fffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f00000000085010281613ad557fe5b05905060006ec097ce7bc90715b34b9f100000000082800205905081806ec097ce7bc90715b34b9f100000000081840205915060038205016ec097ce7bc90715b34b9f100000000082840205915060058205016ec097ce7bc90715b34b9f100000000082840205915060078205016ec097ce7bc90715b34b9f100000000082840205915060098205016ec097ce7bc90715b34b9f1000000000828402059150600b8205016ec097ce7bc90715b34b9f1000000000828402059150600d8205016ec097ce7bc90715b34b9f1000000000828402059150600f826002919005919091010295945050505050565b6000670de0b6b3a7640000821215613bfd57613bf3826ec097ce7bc90715b34b9f100000000081613bed57fe5b05613bc0565b6000039050610b42565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c00000000000008312613c4e57770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e0000008312613c86576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff00840008312613cce576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312613d09576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf8508312613d4057693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e28312613d7757690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d038312613dac5768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb417461211108312613dd757680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312613e0c576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f17757889379378312613e41576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b2866038312613e75576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac8312613ea9576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d631000008086030281613ecc57fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b6000838311613f715750600061137b565b6000613f7d8585612817565b90506000613f93670de0b6b3a76400008861233d565b9050613fa7826709b6e64a8ec600006143ca565b91506000613fb5838361425c565b90506000613fcc613fc5836127f1565b8b906139c9565b9050612e1c81876139c9565b60006060613fe4611d29565b600080613ff0856143e1565b91509150614002600282106064611abb565b604080516002808252606080830184529260208301908036833701905050905061406388838151811061403157fe5b602002602001015188848151811061404557fe5b60200260200101518561405661085a565b61405e610ba2565b614403565b81838151811061406f57fe5b6020908102919091010152919791965090945050505050565b600060606000614097846144ba565b905060606140ad86836140a861085a565b6144d0565b9196919550909350505050565b600060606140c6611d29565b606060006140d385614582565b915091506140e382516002611fa8565b6140ec8261239c565b60006141098888856140fc61085a565b614104610ba2565b61459a565b90506141198282111560cf611abb565b9791965090945050505050565b600082821c661fffffffffffff16660fffffffffffff81136141485780610a7b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffe0000000000000179392505050565b6000606080600061418185614582565b9150915061419182516002611fa8565b61419a8261239c565b60006141b78888856141aa61085a565b6141b2610ba2565b6147c6565b90506141198282101560d0611abb565b600060606000806141d7856143e1565b915091506141e9600282106064611abb565b604080516002808252606080830184529260208301908036833701905050905061406388838151811061421857fe5b602002602001015188848151811061422c57fe5b60200260200101518561423d61085a565b614245610ba2565b6149d7565b637fffffff811b1992909216911b1790565b6000806142698484614288565b9050600061427c61399a83612710612751565b905061137b8282611871565b60008161429e5750670de0b6b3a7640000610840565b826142ab57506000610840565b6142d87f800000000000000000000000000000000000000000000000000000000000000084106006611abb565b826142fe770bce5086492111aea88f4bb1ca6bcf584181ea8059f7653284106007611abb565b826000670c7d713b49da00008313801561431f5750670f43fc2c04ee000083125b1561435657600061432f84613a89565b9050670de0b6b3a764000080820784020583670de0b6b3a764000083050201915050614364565b8161436084613bc0565b0290505b670de0b6b3a764000090056143b27ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc000082128015906143ab575068070c1cc73b00c800008213155b6008611abb565b61186081612fc9565b600061040082840381016139fe565b6000818310156143da5781610a46565b5090919050565b600080828060200190518101906143f8919061537f565b909590945092505050565b60008061441484612b4d818861189f565b905061442d6709b6e64a8ec60000821015610132611abb565b600061444b614444670de0b6b3a76400008961233d565b839061425c565b9050600061446261445b836127f1565b8a906139c9565b9050600061446f896127f1565b9050600061447d8383612751565b9050600061448b848361189f565b90506144aa6144a361449c8a6127f1565b84906139c9565b8290611871565b9c9b505050505050505050505050565b600081806020019051810190610a469190615352565b606060006144de848461233d565b90506060855167ffffffffffffffff811180156144fa57600080fd5b50604051908082528060200260200182016040528015614524578160200160208202803683370190505b50905060005b8651811015614578576145598388838151811061454357fe5b60200260200101516139c990919063ffffffff16565b82828151811061456557fe5b602090810291909101015260010161452a565b5095945050505050565b60606000828060200190518101906143f8919061530b565b60006060845167ffffffffffffffff811180156145b657600080fd5b506040519080825280602002602001820160405280156145e0578160200160208202803683370190505b5090506000805b88518110156146a5576146408982815181106145ff57fe5b6020026020010151612b4d89848151811061461657fe5b60200260200101518c858151811061462a57fe5b602002602001015161189f90919063ffffffff16565b83828151811061464c57fe5b60200260200101818152505061469b61469489838151811061466a57fe5b602002602001015185848151811061467e57fe5b602002602001015161275190919063ffffffff16565b8390611871565b91506001016145e7565b50670de0b6b3a764000060005b89518110156147a55760008482815181106146c957fe5b60200260200101518411156147275760006146f26146e6866127f1565b8d858151811061454357fe5b90506000614706828c868151811061462a57fe5b905061471e6146946147178b6127f1565b8390612817565b9250505061473e565b88828151811061473357fe5b602002602001015190505b60006147678c848151811061474f57fe5b6020026020010151610cba848f878151811061462a57fe5b90506147996147928c858151811061477b57fe5b60200260200101518361397a90919063ffffffff16565b85906139c9565b935050506001016146b2565b506147b96147b2826127f1565b8790612751565b9998505050505050505050565b60006060845167ffffffffffffffff811180156147e257600080fd5b5060405190808252806020026020018201604052801561480c578160200160208202803683370190505b5090506000805b88518110156148b45761486c89828151811061482b57fe5b6020026020010151610cba89848151811061484257fe5b60200260200101518c858151811061485657fe5b602002602001015161187190919063ffffffff16565b83828151811061487857fe5b6020026020010181815250506148aa61469489838151811061489657fe5b602002602001015185848151811061454357fe5b9150600101614813565b50670de0b6b3a764000060005b8951811015614995576000838583815181106148d957fe5b602002602001015111156149355760006148fe6146e686670de0b6b3a764000061189f565b90506000614912828c868151811061462a57fe5b905061492c614694612a77670de0b6b3a76400008c61189f565b9250505061494c565b88828151811061494157fe5b602002602001015190505b60006149758c848151811061495d57fe5b6020026020010151610cba848f878151811061485657fe5b90506149896147928c858151811061477b57fe5b935050506001016148c1565b50670de0b6b3a764000081106149cb576149c16149ba82670de0b6b3a764000061189f565b87906139c9565b935050505061137b565b6000935050505061137b565b6000806149e884612b4d8188611871565b9050614a016729a2241af62c0000821115610133611abb565b6000614a18614444670de0b6b3a764000089612817565b90506000614a38614a3183670de0b6b3a764000061189f565b8a90612751565b90506000614a45896127f1565b90506000614a538383612751565b90506000614a61848361189f565b90506144aa6144a3614a728a6127f1565b8490612817565b6040805160608101909152806000815260200160008152602001600081525090565b604080518082019091526000808252602082015290565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b803561084081615a7a565b600082601f830112614b24578081fd5b8135614b37614b3282615a5a565b615a33565b818152915060208083019084810181840286018201871015614b5857600080fd5b60005b84811015614b7757813584529282019290820190600101614b5b565b505050505092915050565b600082601f830112614b92578081fd5b8151614ba0614b3282615a5a565b818152915060208083019084810181840286018201871015614bc157600080fd5b60005b84811015614b7757815184529282019290820190600101614bc4565b600082601f830112614bf0578081fd5b813567ffffffffffffffff811115614c06578182fd5b614c3760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601615a33565b9150808252836020828501011115614c4e57600080fd5b8060208401602084013760009082016020015292915050565b80356002811061084057600080fd5b803561084081615aaa565b600060e08284031215614c92578081fd5b614c9c60e0615a33565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015292915050565b600060208284031215614cf5578081fd5b8135610a4681615a7a565b60008060408385031215614d12578081fd5b8235614d1d81615a7a565b91506020830135614d2d81615a7a565b809150509250929050565b600080600060608486031215614d4c578081fd5b8335614d5781615a7a565b92506020840135614d6781615a7a565b929592945050506040919091013590565b600080600080600080600060e0888a031215614d92578485fd5b8735614d9d81615a7a565b96506020880135614dad81615a7a565b95506040880135945060608801359350608088013560ff81168114614dd0578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215614dff578182fd5b8235614e0a81615a7a565b946020939093013593505050565b600080600060608486031215614e2c578081fd5b835167ffffffffffffffff80821115614e43578283fd5b818601915086601f830112614e56578283fd5b8151614e64614b3282615a5a565b80828252602080830192508086018b828387028901011115614e84578788fd5b8796505b84871015614eaf578051614e9b81615a7a565b845260019690960195928101928101614e88565b508901519097509350505080821115614ec6578283fd5b50614ed386828701614b82565b925050604084015190509250925092565b60006020808385031215614ef6578182fd5b823567ffffffffffffffff811115614f0c578283fd5b8301601f81018513614f1c578283fd5b8035614f2a614b3282615a5a565b818152838101908385016040808502860187018a1015614f48578788fd5b8795505b84861015614f955780828b031215614f62578788fd5b614f6b81615a33565b614f758b84614c76565b815282880135888201528452600195909501949286019290810190614f4c565b509098975050505050505050565b60006020808385031215614fb5578182fd5b823567ffffffffffffffff811115614fcb578283fd5b8301601f81018513614fdb578283fd5b8035614fe9614b3282615a5a565b818152838101908385016060808502860187018a1015615007578788fd5b8795505b84861015614f955780828b031215615021578788fd5b61502a81615a33565b6150348b84614c76565b8152828801358882015260408084013590820152845260019590950194928601929081019061500b565b60008060408385031215615070578182fd5b823567ffffffffffffffff80821115615087578384fd5b61509386838701614b14565b93506020915081850135818111156150a9578384fd5b85019050601f810186136150bb578283fd5b80356150c9614b3282615a5a565b8181528381019083850160e0808502860187018b10156150e7578788fd5b8795505b84861015615113576150fd8b83614c81565b84526001959095019492860192908101906150eb565b5096999098509650505050505050565b60008060408385031215615135578182fd5b823567ffffffffffffffff81111561514b578283fd5b61515785828601614b14565b95602094909401359450505050565b600060208284031215615177578081fd5b8135610a4681615a9c565b600060208284031215615193578081fd5b8151610a4681615a9c565b6000602082840312156151af578081fd5b5035919050565b600080600080600080600060e0888a0312156151d0578081fd5b8735965060208801356151e281615a7a565b955060408801356151f281615a7a565b9450606088013567ffffffffffffffff8082111561520e578283fd5b61521a8b838c01614b14565b955060808a0135945060a08a0135935060c08a013591508082111561523d578283fd5b5061524a8a828b01614be0565b91505092959891949750929550565b600080600080600060a08688031215615270578283fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000602082840312156152a4578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610a46578182fd5b6000602082840312156152e4578081fd5b8151610a4681615a7a565b600060208284031215615300578081fd5b8151610a4681615aaa565b60008060006060848603121561531f578081fd5b835161532a81615aaa565b602085015190935067ffffffffffffffff811115615346578182fd5b614ed386828701614b82565b60008060408385031215615364578182fd5b825161536f81615aaa565b6020939093015192949293505050565b600080600060608486031215615393578081fd5b835161539e81615aaa565b602085015160409095015190969495509392505050565b600080604083850312156153c7578182fd5b82516153d281615aaa565b602084015190925067ffffffffffffffff8111156153ee578182fd5b6153fa85828601614b82565b9150509250929050565b600060208284031215615415578081fd5b8135610a4681615aaa565b600080600060608486031215615434578081fd5b833561543f81615aaa565b95602085013595506040909401359392505050565b600060c08284031215615465578081fd5b61546f60c0615a33565b82358152602083013560208201526040830135604082015260608301356060820152608083013561549f81615a9c565b608082015260a0928301359281019290925250919050565b600060e082840312156154c8578081fd5b610a468383614c81565b6000806000606084860312156154e6578081fd5b833567ffffffffffffffff808211156154fd578283fd5b8186019150610120808389031215615513578384fd5b61551c81615a33565b90506155288884614c67565b81526155378860208501614b09565b60208201526155498860408501614b09565b6040820152606083013560608201526080830135608082015260a083013560a08201526155798860c08501614b09565b60c082015261558b8860e08501614b09565b60e082015261010080840135838111156155a3578586fd5b6155af8a828701614be0565b9183019190915250976020870135975060409096013595945050505050565b60008061010083850312156155e1578182fd5b823591506155f28460208501614c81565b90509250929050565b60008060006060848603121561560f578081fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561563b578182fd5b5050823594602084013594506040840135936060013592509050565b6000815180845260208085019450808401835b838110156156865781518752958201959082019060010161566a565b509495945050505050565b9182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6000828483379101908152919050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6020808252825182820181905260009190848201906040850190845b8181101561576057835183529284019291840191600101615744565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b828110156157ae57815180518552860151868501529284019290850190600101615789565b5091979650505050505050565b600060208252610a466020830184615657565b6000604082526157e16040830185615657565b828103602084015261137b8185615657565b901515815260200190565b9115158252602082015260400190565b92151583526020830191909152604082015260600190565b90815260200190565b92835273ffffffffffffffffffffffffffffffffffffffff918216602084015216604082015260600190565b95865273ffffffffffffffffffffffffffffffffffffffff94851660208701529290931660408501526060840152608083019190915260a082015260c00190565b94855260208501939093526040840191909152606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b6000602080835283518082850152825b818110156159795785810183015185820160400152820161595d565b8181111561598a5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b600083825260406020830152610a7b6040830184615657565b60ff91909116815260200190565b60405181810167ffffffffffffffff81118282101715615a5257600080fd5b604052919050565b600067ffffffffffffffff821115615a70578081fd5b5060209081020190565b73ffffffffffffffffffffffffffffffffffffffff8116811461085757600080fd5b801515811461085757600080fd5b6003811061085757600080fdfea2646970667358221220a8f50f0fed4273d0b2b5944f00ac4d3ce757a86ea5d55032af000716d24958fd64736f6c63430007010033";

type WeightedPool2TokensMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WeightedPool2TokensMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WeightedPool2TokensMock__factory extends ContractFactory {
  constructor(...args: WeightedPool2TokensMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    params: NewPoolParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WeightedPool2TokensMock> {
    return super.deploy(
      params,
      overrides || {}
    ) as Promise<WeightedPool2TokensMock>;
  }
  getDeployTransaction(
    params: NewPoolParamsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(params, overrides || {});
  }
  attach(address: string): WeightedPool2TokensMock {
    return super.attach(address) as WeightedPool2TokensMock;
  }
  connect(signer: Signer): WeightedPool2TokensMock__factory {
    return super.connect(signer) as WeightedPool2TokensMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WeightedPool2TokensMockInterface {
    return new utils.Interface(_abi) as WeightedPool2TokensMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WeightedPool2TokensMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WeightedPool2TokensMock;
  }
}
